"use strict";(self.webpackChunkhauler_docs=self.webpackChunkhauler_docs||[]).push([[7620],{3586:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"hauler-usage/store/save","title":"Hauler Store Save","description":"Hauler Store Save Usage Documentation","source":"@site/versioned_docs/version-1.2.x/hauler-usage/store/save.md","sourceDirName":"hauler-usage/store","slug":"/hauler-usage/store/save","permalink":"/docs/hauler-usage/store/save","draft":false,"unlisted":false,"editUrl":"https://github.com/hauler-dev/hauler-docs/edit/main/versioned_docs/version-1.2.x/hauler-usage/store/save.md","tags":[],"version":"1.2.x","frontMatter":{"title":"Hauler Store Save","description":"Hauler Store Save Usage Documentation","sidebar_label":"Save"},"sidebar":"haulerSidebar","previous":{"title":"Load","permalink":"/docs/hauler-usage/store/load"},"next":{"title":"Registry","permalink":"/docs/hauler-usage/store/serve/registry"}}');var n=t(4848),s=t(8453);const o={title:"Hauler Store Save",description:"Hauler Store Save Usage Documentation",sidebar_label:"Save"},i=void 0,l={},u=[{value:"Overview",id:"overview",level:3},{value:"Command Overview",id:"command-overview",level:3}];function c(e){const r={code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"hauler store save"})," saves a content store to a store archive."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"An example with available flags..."})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store save --filename <file-name-with-extension>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"command-overview",children:"Command Overview"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-yaml",children:'Usage:\n  hauler store save [flags]\n\nFlags:\n  -f, --filename string   (Optional) Specify the name of outputted haul (default "haul.tar.zst")\n  -h, --help              help for save\n  -p, --platform string   (Optional) Specify the platform for runtime imports... i.e. linux/amd64 (unspecified implies all)\n\nGlobal Flags:\n  -d, --haulerdir string   Set the location of the hauler directory (default $HOME/.hauler)\n      --ignore-errors      Ignore/Bypass errors (i.e. warn on error) (defaults false)\n  -l, --log-level string   Set the logging level (i.e. info, debug, warn) (default "info")\n  -r, --retries int        Set the number of retries for operations (default 3)\n  -s, --store string       Set the directory to use for the content store\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>i});var a=t(6540);const n={},s=a.createContext(n);function o(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);