"use strict";(self.webpackChunkhauler_docs=self.webpackChunkhauler_docs||[]).push([[9728],{9379:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides-references/hauler-manifests","title":"Hauler Manifests","description":"Hauler Manifests Documentation","source":"@site/versioned_docs/version-1.2.x/guides-references/hauler-manifests.md","sourceDirName":"guides-references","slug":"/guides-references/hauler-manifests","permalink":"/docs/guides-references/hauler-manifests","draft":false,"unlisted":false,"editUrl":"https://github.com/hauler-dev/hauler-docs/edit/main/versioned_docs/version-1.2.x/guides-references/hauler-manifests.md","tags":[],"version":"1.2.x","frontMatter":{"title":"Hauler Manifests","description":"Hauler Manifests Documentation","sidebar_label":"Hauler Manifests"},"sidebar":"haulerSidebar","previous":{"title":"Bootstrapping Utilities","permalink":"/docs/guides-references/bootstraping-utilities"},"next":{"title":"Hauler Content","permalink":"/docs/guides-references/hauler-content"}}');var r=n(4848),i=n(8453);const s={title:"Hauler Manifests",description:"Hauler Manifests Documentation",sidebar_label:"Hauler Manifests"},l=void 0,o={},c=[{value:"Example Manifest for Images",id:"example-manifest-for-images",level:2},{value:"Example Manifest for Charts",id:"example-manifest-for-charts",level:2},{value:"Example Manifest for Files",id:"example-manifest-for-files",level:2}];function f(e){const a={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"example-manifest-for-images",children:"Example Manifest for Images"}),"\n",(0,r.jsxs)(a.p,{children:["Please review the Hauler Content Pages for ",(0,r.jsx)(a.a,{href:"/docs/hauler-usage/store/add/image",children:"Images"})," for more detailed information."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",metastring:'title="hauler-image-manifest.yaml"',children:"apiVersion: content.hauler.cattle.io/v1\nkind: Images\nmetadata:\n  name: hauler-content-images-example\n  annotations:\n    # global flags for all images in the manifest\n    # image flags override global flags\n    # example: platform set globally, but not observed if set per image\n    # example: registry set globally, but not observed if set per image\n    hauler.dev/platform: <platform>\n    hauler.dev/registry: <registry>\n    # example: keyless signature validation set globally, but not observed if set per image\n    hauler.dev/certificate-identity-regexp: <certificate-identity>\n    hauler.dev/certificate-oidc-issuer: <certificate-issuer>\n    # repository claim from GH identity token for GitHub workflows\n    hauler.dev/certificate-github-workflow-repository: <GH-repo>\n    # example: set transparency log verificaton to true (not compatible with airgap)\n    hauler.dev/use-tlog-verify: true\nspec:\n  images:\n    # fetch image\n    - name: neuvector/scanner\n    # fetch image with full image reference\n    - name: docker.io/neuvector/updater:latest\n    # fetch image with full image reference with digest\n    - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56\n    # fetch image with full image reference, specific version, specific platform\n    - name: docker.io/longhornio/longhorn-ui:v1.6.0\n      platform: linux/amd64\n    # fetch image with full image reference, specific version, specific platform, and signature verification\n    - name: docker.io/longhornio/longhorn-manager:v1.6.0\n      key: cosign-public-key.pub\n      platform: linux/amd64\n"})}),"\n",(0,r.jsx)(a.h2,{id:"example-manifest-for-charts",children:"Example Manifest for Charts"}),"\n",(0,r.jsxs)(a.p,{children:["Please review the Hauler Content Pages for ",(0,r.jsx)(a.a,{href:"/docs/hauler-usage/store/add/chart",children:"Charts"})," for more detailed information."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",metastring:'title="hauler-chart-manifest.yaml"',children:"apiVersion: content.hauler.cattle.io/v1\nkind: Charts\nmetadata:\n  name: hauler-content-charts-example\n  annotations:\n  # example: key set globally, but not observed if set per image\n  hauler.dev/key: <cosign-public-key>\n  hauler.dev/registry: <registry>\nspec:\n  charts:\n    # fetch helm chart\n    - name: rancher\n      repoURL: https://releases.rancher.com/server-charts/stable\n    # fetch helm chart with specific version\n    - name: rancher-cluster-templates\n      repoURL: oci://ghcr.io/rancherfederal/charts\n      version: 0.6.1\n"})}),"\n",(0,r.jsx)(a.h2,{id:"example-manifest-for-files",children:"Example Manifest for Files"}),"\n",(0,r.jsxs)(a.p,{children:["Please review the Hauler Content Pages for ",(0,r.jsx)(a.a,{href:"/docs/hauler-usage/store/add/file",children:"Files"})," for more detailed information."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",metastring:'title="hauler-file-manifest.yaml"',children:"apiVersion: content.hauler.cattle.io/v1\nkind: Files\nmetadata:\n  name: hauler-content-files-example\nspec:\n  files:\n    # fetch remote file\n    - path: https://get.rke2.io\n    # fetch remote file and assign new name\n    - path: https://get.rke2.io\n      name: install.sh\n    # fetch local file\n    - path: path/to/local/file.txt\n    # fetch local file and assign new name\n    - path: path/to/local/file.txt\n      name: local-file.txt\n"})})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>l});var t=n(6540);const r={},i=t.createContext(r);function s(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);