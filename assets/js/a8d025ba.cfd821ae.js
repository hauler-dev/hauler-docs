"use strict";(self.webpackChunkhauler_docs=self.webpackChunkhauler_docs||[]).push([[264],{5940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"hauler-usage/store/add/file","title":"Hauler Store Add File","description":"Hauler Store Add File Usage Documentation","source":"@site/versioned_docs/version-1.2.x/hauler-usage/store/add/file.md","sourceDirName":"hauler-usage/store/add","slug":"/hauler-usage/store/add/file","permalink":"/docs/hauler-usage/store/add/file","draft":false,"unlisted":false,"editUrl":"https://github.com/hauler-dev/hauler-docs/edit/main/versioned_docs/version-1.2.x/hauler-usage/store/add/file.md","tags":[],"version":"1.2.x","frontMatter":{"title":"Hauler Store Add File","description":"Hauler Store Add File Usage Documentation","sidebar_label":"File"},"sidebar":"haulerSidebar","previous":{"title":"Chart","permalink":"/docs/hauler-usage/store/add/chart"},"next":{"title":"Copy","permalink":"/docs/hauler-usage/store/copy"}}');var l=n(4848),r=n(8453);const i={title:"Hauler Store Add File",description:"Hauler Store Add File Usage Documentation",sidebar_label:"File"},s=void 0,o={},d=[{value:"Overview",id:"overview",level:3},{value:"Command Overview",id:"command-overview",level:3},{value:"Example Commands for Files",id:"example-commands-for-files",level:3},{value:"Hauler Manifest for Files",id:"hauler-manifest-for-files",level:3},{value:"Example Manifest for Files",id:"example-manifest-for-files",level:3}];function c(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"hauler store add file"})," adds a file to the store."]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.strong,{children:"An example with available flags..."})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"hauler store add file <file> --name <name>\n"})}),"\n",(0,l.jsx)(t.h3,{id:"command-overview",children:"Command Overview"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",children:'Usage:\n  hauler store add file [flags]\n\nExamples:\n# fetch local file\nhauler store add file file.txt\n\n# fetch remote file\nhauler store add file https://get.rke2.io/install.sh\n\n# fetch remote file and assign new name\nhauler store add file https://get.hauler.dev --name hauler-install.sh\n\nFlags:\n  -h, --help          help for file\n  -n, --name string   (Optional) Rewrite the name of the file\n\nFlags for Keyless Verification:\n  --certificate-identity-regexp string               (Optional) OIDC identity tied to certificate\n  --certificate-oidc-issuer string                   (Optional) OIDC issuer\n  --certificate-github-workflow-repository string    (Optional) Repository claim from GH identity token for GitHub workflows\n\nGlobal Flags:\n  -d, --haulerdir string   Set the location of the hauler directory (default $HOME/.hauler)\n      --ignore-errors      Ignore/Bypass errors (i.e. warn on error) (defaults false)\n  -l, --log-level string   Set the logging level (i.e. info, debug, warn) (default "info")\n  -r, --retries int        Set the number of retries for operations (default 3)\n  -s, --store string       Set the directory to use for the content store\n'})}),"\n",(0,l.jsx)(t.h3,{id:"example-commands-for-files",children:"Example Commands for Files"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# fetch local file\nhauler store add file file.txt\n\n# fetch remote file\nhauler store add file https://get.rke2.io/install.sh\n\n# fetch remote file and assign new name\nhauler store add file https://get.hauler.dev --name hauler-install.sh\n"})}),"\n",(0,l.jsx)(t.h3,{id:"hauler-manifest-for-files",children:"Hauler Manifest for Files"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="hauler-file-manifest.yaml"',children:"apiVersion: content.hauler.cattle.io/v1\nkind: Files\nmetadata:\n  name: hauler-content-files-example\nspec:\n  files:\n    - path: <file>\n      name: <name>\n"})}),"\n",(0,l.jsx)(t.h3,{id:"example-manifest-for-files",children:"Example Manifest for Files"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="hauler-file-manifest.yaml"',children:"apiVersion: content.hauler.cattle.io/v1\nkind: Files\nmetadata:\n  name: hauler-content-files-example\nspec:\n  files:\n    # fetch remote file\n    - path: https://get.rke2.io\n    # fetch remote file and assign new name\n    - path: https://get.rke2.io\n      name: install.sh\n    # fetch local file\n    - path: path/to/local/file.txt\n    # fetch local file and assign new name\n    - path: path/to/local/file.txt\n      name: local-file.txt\n"})})]})}function f(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(6540);const l={},r=a.createContext(l);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);