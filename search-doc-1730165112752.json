{"searchDocs":[{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/0.4.0/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"0.4.0","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"0.4.0","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower users to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"0.4.0","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"0.4.0","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as images, charts, or files. These are the fundamental types of resources that Hauler understands and manages. To understand the term better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) artifact. OCI Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"0.4.0","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.0/core-concepts#declarative-content","content":" While manually adding content to Hauler is a straightforward way to get started, we recommend a much more sustainable approach. Hauler provides a declarative approach for each content type, allowing you to define all the content within a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. ","version":"0.4.0","tagName":"h3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/0.4.0/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/0.4.0/airgap-workflow#workflow-diagram","content":"   Airgap Workflow Documentation pending a future release! ","version":"0.4.0","tagName":"h2"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/0.4.0/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generate the autocompletion script for the specified shell download Download OCI content from a registry and populate it on disk help Help about any command serve Run one or more of hauler's embedded servers types store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"0.4.0","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.0/guides-references/cluster-images#example-output","content":" index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"0.4.0","tagName":"h3"},{"title":"Hauler Manifest using the Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.0/guides-references/cluster-images#hauler-manifest-using-the-images","content":" IMAGE_LIST_MODIFIED=$(cat &quot;$IMAGE_LIST&quot; | sed 's/^/ - name: /') # sed, stream editor, appends 2 spaces of indentation denotes # an entry in a list, then adds name: to match expected syntax   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: $IMAGE_LIST_MODIFIED   ","version":"0.4.0","tagName":"h3"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.0/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"0.4.0","tagName":"h3"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/0.4.0/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"0.4.0","tagName":"h3"},{"title":"Overview of Hauler Collections","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/hauler-collections/overview","content":"Overview of Hauler Collections Hauler Collections Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Charts (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/hauler-content/charts","content":"Charts (Content Type) tip Hauler supports the experimental format of Helm Chart OCI Artifacts, but can also be represented as the usual Tarball Artifact! Helm charts represented as OCI content: # add a helm chart (defaults to latest version) hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; # add a specific version of a helm chart hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; --version 2.8.1 # install directly from the oci content HELM_EXPERIMENTAL_OCI=1 helm install loki oci://localhost:3000/library/loki --version 2.8.1 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/0.4.0/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generate the autocompletion script for bash fish Generate the autocompletion script for fish powershell Generate the autocompletion script for powershell zsh Generate the autocompletion script for zsh Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"0.4.0","tagName":"h3"},{"title":"Files (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/hauler-content/files","content":"Files (Content Type) Generic content that can be represented as a file, either sourced locally or remotely: # local file hauler store add file path/to/local/file.txt # remote file with name hauler store add file https://get.rke2.io --name install.sh ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Images (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/hauler-content/images","content":"Images (Content Type) Any OCI compatible image can be fetched remotely: # &quot;shorthand&quot; image references hauler store add image rancher/rancher:v2.7.9 # fully qualified image references hauler store add image ghcr.io/fluxcd/flux-cli@sha256:02aa820c3a9c57d67208afcfc4bce9661658c17d15940aea369da259d2b976dd ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Overview of Hauler Content","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/hauler-content/overview","content":"Overview of Hauler Content Hauler Content Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/0.4.0/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionCluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tDetailed Overview of Hauler Collections Hauler Content\tDetailed Overview of Hauler Content Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"0.4.0","tagName":"h2"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/0.4.0/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.0/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring users to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow users to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows users to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"0.4.0","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.0/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  go-containerregistryoras clicosign ","version":"0.4.0","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/0.4.0/introduction/uninstall","content":"Uninstall Uninstall Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.0/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/0.4.0/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;pkg.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant server.  Usage: hauler store serve [flags] Flags: -c, --config string Path to a config file, will override all other configs -d, --daemon Toggle serving as a daemon --directory string Directory to use for registry backend (defaults to '$PWD/registry') (default &quot;registry&quot;) -h, --help help for serve -p, --port int Port to listen on (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)  ","version":"0.4.0","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/0.4.0/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes or depedencies. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"0.4.0","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"0.4.0","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#installation-steps","content":" ","version":"0.4.0","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=0.4.0 bash   ","version":"0.4.0","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#windows","content":" # coming soon   ","version":"0.4.0","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#homebrew","content":" # coming soon   ","version":"0.4.0","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.0/introduction/install#manual-installation-steps","content":" # set the hauler version (i.e. &quot;0.4.0&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler  ","version":"0.4.0","tagName":"h2"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/0.4.0/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.0/known-limits#issues","content":" Copying SBOMS to AWS Elastic Container Registry (AWS ECR): When using hauler store copy to AWS ECR, the Software Bill of Materials (SBOM) attachement will fail to copy due to changes in the way cosign handles attachments. We are investigating a way forward to address this issue.https://github.com/sigstore/cosign/blob/main/specs/SBOM_SPEC.mdhttps://github.com/sigstore/cosign/issues/2755  ","version":"0.4.0","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.0/known-limits#limitations","content":" Display of Information in the Hauler Store: When using hauler store info with signature verification, you may encounter errors in the presentation of the number layers and size of layers in the store. Hauler is correctly fetching, storing, packaging, and distributing each image, but the presentation and display can error. We are actively working to address and fix this issue.  ","version":"0.4.0","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.0/known-limits#notices","content":" Upcoming Deprecated Command(s):​  hauler download (alternatively hauler dl) is deprecated and will be removed in a future release.hauler serve is deprecated and will be removed in a future release. ","version":"0.4.0","tagName":"h2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/0.4.0/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.0"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"0.4.0","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#example-use-of-hauler","content":" ","version":"0.4.0","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line:​  # add a image: neuvector/scanner:latest hauler store add image neuvector/scanner:latest # add a image with supply chain artifacts hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --key carbide-key.pub # add a chart: rancher-stable/rancher (v2.7.9) hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.7.9 # add a file: rke2-install.sh hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest:​  hauler store sync --files hauler-manfiest.yaml   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.1 key: carbide-key.pub --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.7.9 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh   ","version":"0.4.0","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"0.4.0","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"0.4.0","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"0.4.0","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store hauler store serve   ","version":"0.4.0","tagName":"h3"},{"title":"Copy the Hauler Store to a Registry​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#copy-the-hauler-store-to-a-registry","content":" # copy the content to a registry from the hauler store hauler store copy registry://harbor.example.com   ","version":"0.4.0","tagName":"h3"},{"title":"Copy the Hauler Store to a Directory​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.0/introduction/quickstart#copy-the-hauler-store-to-a-directory","content":" # copy the content to a directory from the hauler store hauler store copy dir://hauler-files  ","version":"0.4.0","tagName":"h3"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/0.4.1/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"0.4.1","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"0.4.1","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower users to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"0.4.1","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"0.4.1","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as images, charts, or files. These are the fundamental types of resources that Hauler understands and manages. To understand the term better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) artifact. OCI Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"0.4.1","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.1/core-concepts#declarative-content","content":" While manually adding content to Hauler is a straightforward way to get started, we recommend a much more sustainable approach. Hauler provides a declarative approach for each content type, allowing you to define all the content within a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. ","version":"0.4.1","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.1/guides-references/cluster-images#example-output","content":" index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"0.4.1","tagName":"h3"},{"title":"Hauler Manifest using the Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.1/guides-references/cluster-images#hauler-manifest-using-the-images","content":" IMAGE_LIST_MODIFIED=$(cat &quot;$IMAGE_LIST&quot; | sed 's/^/ - name: /') # sed, stream editor, appends 2 spaces of indentation denotes # an entry in a list, then adds name: to match expected syntax   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: $IMAGE_LIST_MODIFIED   ","version":"0.4.1","tagName":"h3"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.1/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"0.4.1","tagName":"h3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/0.4.1/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/0.4.1/airgap-workflow#workflow-diagram","content":"   Airgap Workflow Documentation pending a future release! ","version":"0.4.1","tagName":"h2"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/0.4.1/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generate the autocompletion script for the specified shell download Download OCI content from a registry and populate it on disk help Help about any command serve Run one or more of hauler's embedded servers types store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"0.4.1","tagName":"h3"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/0.4.1/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"0.4.1","tagName":"h3"},{"title":"Overview of Hauler Collections","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/hauler-collections/overview","content":"Overview of Hauler Collections Hauler Collections Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Charts (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/hauler-content/charts","content":"Charts (Content Type) tip Hauler supports the experimental format of Helm Chart OCI Artifacts, but can also be represented as the usual Tarball Artifact! Helm charts represented as OCI content: # add a helm chart (defaults to latest version) hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; # add a specific version of a helm chart hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; --version 2.8.1 # install directly from the oci content HELM_EXPERIMENTAL_OCI=1 helm install loki oci://localhost:3000/library/loki --version 2.8.1 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Files (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/hauler-content/files","content":"Files (Content Type) Generic content that can be represented as a file, either sourced locally or remotely: # local file hauler store add file path/to/local/file.txt # remote file with name hauler store add file https://get.rke2.io --name install.sh ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Images (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/hauler-content/images","content":"Images (Content Type) Any OCI compatible image can be fetched remotely: # &quot;shorthand&quot; image references hauler store add image rancher/rancher:v2.7.9 # fully qualified image references hauler store add image ghcr.io/fluxcd/flux-cli@sha256:02aa820c3a9c57d67208afcfc4bce9661658c17d15940aea369da259d2b976dd ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Overview of Hauler Content","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/hauler-content/overview","content":"Overview of Hauler Content Hauler Content Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/0.4.1/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generate the autocompletion script for bash fish Generate the autocompletion script for fish powershell Generate the autocompletion script for powershell zsh Generate the autocompletion script for zsh Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"0.4.1","tagName":"h3"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/0.4.1/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;pkg.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant server.  Usage: hauler store serve [flags] Flags: -c, --config string Path to a config file, will override all other configs -d, --daemon Toggle serving as a daemon --directory string Directory to use for registry backend (defaults to '$PWD/registry') (default &quot;registry&quot;) -h, --help help for serve -p, --port int Port to listen on (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)  ","version":"0.4.1","tagName":"h3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/0.4.1/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.1/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring users to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow users to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows users to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"0.4.1","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.1/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  go-containerregistryoras clicosign ","version":"0.4.1","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/0.4.1/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/0.4.1/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionCluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tDetailed Overview of Hauler Collections Hauler Content\tDetailed Overview of Hauler Content Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"0.4.1","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/0.4.1/introduction/uninstall","content":"Uninstall Uninstall Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/0.4.1/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.1/known-limits#issues","content":" Copying SBOMS to AWS Elastic Container Registry (AWS ECR): When using hauler store copy to AWS ECR, the Software Bill of Materials (SBOM) attachement will fail to copy due to changes in the way cosign handles attachments. We are investigating a way forward to address this issue.https://github.com/sigstore/cosign/blob/main/specs/SBOM_SPEC.mdhttps://github.com/sigstore/cosign/issues/2755  ","version":"0.4.1","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.1/known-limits#limitations","content":" Display of Information in the Hauler Store: When using hauler store info with signature verification, you may encounter errors in the presentation of the number layers and size of layers in the store. Hauler is correctly fetching, storing, packaging, and distributing each image, but the presentation and display can error. We are actively working to address and fix this issue.  ","version":"0.4.1","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.1/known-limits#notices","content":" Upcoming Deprecated Command(s):​  hauler download (alternatively hauler dl) is deprecated and will be removed in a future release.hauler serve is deprecated and will be removed in a future release. ","version":"0.4.1","tagName":"h2"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/0.4.2/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/0.4.2/airgap-workflow#workflow-diagram","content":"   Airgap Workflow Documentation pending a future release! ","version":"0.4.2","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/0.4.1/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes or depedencies. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"0.4.1","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"0.4.1","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#installation-steps","content":" ","version":"0.4.1","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=0.4.1 bash   ","version":"0.4.1","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#windows","content":" # coming soon   ","version":"0.4.1","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#homebrew","content":" # coming soon   ","version":"0.4.1","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.1/introduction/install#manual-installation-steps","content":" # set the hauler version (i.e. &quot;0.4.1&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler  ","version":"0.4.1","tagName":"h2"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/0.4.2/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"0.4.2","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"0.4.2","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower users to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"0.4.2","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"0.4.2","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as images, charts, or files. These are the fundamental types of resources that Hauler understands and manages. To understand the term better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) artifact. OCI Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"0.4.2","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.2/core-concepts#declarative-content","content":" While manually adding content to Hauler is a straightforward way to get started, we recommend a much more sustainable approach. Hauler provides a declarative approach for each content type, allowing you to define all the content within a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. ","version":"0.4.2","tagName":"h3"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/0.4.2/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generates completion scripts for various shells download Download OCI content from a registry and populate it on disk help Help about any command serve Run one or more of hauler's embedded servers types store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"0.4.2","tagName":"h3"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/carbide-customers","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Example Workflow for Carbide​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-carbide","content":" # with signature verification hauler store sync --products carbide=v0.1.1 --key carbide-key.pub # without signature verification hauler store sync --products carbie=v0.1.1   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for RKE2​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-rke2","content":" # with signature verification hauler store sync --products rke2=v1.26.11+rke2r1 --key carbide-key.pub # without signature verification hauler store sync --products rke2=v1.26.11+rke2r1   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for K3S​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-k3s","content":" # with signature verification hauler store sync --products k3s=v1.26.11-k3s2 --key carbide-key.pub # without signature verification hauler store sync --products k3s=v1.26.11-k3s2   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for Rancher​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-rancher","content":" # with signature verification hauler store sync --products rancher=v2.7.9 --key carbide-key.pub # without signature verification hauler store sync --products rancher=v2.7.9   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for Cert-Manager​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-cert-manager","content":" # with signature verification hauler store sync --products cert-manager=v1.13.3 --key carbide-key.pub # without signature verification hauler store sync --products cert-manager=v1.13.3   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for Longhorn​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-longhorn","content":" # with signature verification hauler store sync --products longhorn=v1.5.3 --key carbide-key.pub # without signature verification hauler store sync --products longhorn=v1.5.3   ","version":"0.4.2","tagName":"h3"},{"title":"Example Workflow for NeuVector​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.2/guides-references/carbide-customers#example-workflow-for-neuvector","content":" # with signature verification hauler store sync --products neuvector=v2.6.6 --key carbide-key.pub # without signature verification hauler store sync --products neuvector=v2.6.6  ","version":"0.4.2","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.2/guides-references/cluster-images#example-output","content":" index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"0.4.2","tagName":"h3"},{"title":"Hauler Manifest using the Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.2/guides-references/cluster-images#hauler-manifest-using-the-images","content":" IMAGE_LIST_MODIFIED=$(cat &quot;$IMAGE_LIST&quot; | sed 's/^/ - name: /') # sed, stream editor, appends 2 spaces of indentation denotes # an entry in a list, then adds name: to match expected syntax   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: $IMAGE_LIST_MODIFIED   ","version":"0.4.2","tagName":"h3"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.2/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"0.4.2","tagName":"h3"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/0.4.2/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"0.4.2","tagName":"h3"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/0.4.1/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.1"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"0.4.1","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#example-use-of-hauler","content":" ","version":"0.4.1","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line:​  # add a image: neuvector/scanner:latest hauler store add image neuvector/scanner:latest # add a image with supply chain artifacts hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --key carbide-key.pub # add a chart: rancher-stable/rancher (v2.7.9) hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.7.9 # add a file: rke2-install.sh hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest:​  hauler store sync --files hauler-manfiest.yaml   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.1 key: carbide-key.pub --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.7.9 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh   ","version":"0.4.1","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"0.4.1","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"0.4.1","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"0.4.1","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store hauler store serve   ","version":"0.4.1","tagName":"h3"},{"title":"Copy the Hauler Store to a Registry​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#copy-the-hauler-store-to-a-registry","content":" # copy the content to a registry from the hauler store hauler store copy registry://harbor.example.com   ","version":"0.4.1","tagName":"h3"},{"title":"Copy the Hauler Store to a Directory​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.1/introduction/quickstart#copy-the-hauler-store-to-a-directory","content":" # copy the content to a directory from the hauler store hauler store copy dir://hauler-files  ","version":"0.4.1","tagName":"h3"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/0.4.2/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"0.4.2","tagName":"h3"},{"title":"Overview of Hauler Collections","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/hauler-collections/overview","content":"Overview of Hauler Collections Hauler Collections Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Charts (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/hauler-content/charts","content":"Charts (Content Type) tip Hauler supports the experimental format of Helm Chart OCI Artifacts, but can also be represented as the usual Tarball Artifact! Helm charts represented as OCI content: # add a helm chart (defaults to latest version) hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; # add a specific version of a helm chart hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; --version 2.8.1 # install directly from the oci content HELM_EXPERIMENTAL_OCI=1 helm install loki oci://localhost:3000/library/loki --version 2.8.1 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Files (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/hauler-content/files","content":"Files (Content Type) Generic content that can be represented as a file, either sourced locally or remotely: # local file hauler store add file path/to/local/file.txt # remote file with name hauler store add file https://get.rke2.io --name install.sh ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/0.4.2/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) -t, --type string Filter on type (image, chart, file) (default &quot;all&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;pkg.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant server.  Usage: hauler store serve [flags] Flags: -c, --config string Path to a config file, will override all other configs -d, --daemon Toggle serving as a daemon --directory string Directory to use for registry backend (defaults to '$PWD/registry') (default &quot;registry&quot;) -h, --help help for serve -p, --port int Port to listen on (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h  ","version":"0.4.2","tagName":"h3"},{"title":"Images (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/hauler-content/images","content":"Images (Content Type) Any OCI compatible image can be fetched remotely: # &quot;shorthand&quot; image references hauler store add image rancher/rancher:v2.7.9 # fully qualified image references hauler store add image ghcr.io/fluxcd/flux-cli@sha256:02aa820c3a9c57d67208afcfc4bce9661658c17d15940aea369da259d2b976dd ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/0.4.2/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionCluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tDetailed Overview of Hauler Collections Hauler Content\tDetailed Overview of Hauler Content Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"0.4.2","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/0.4.2/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes or depedencies. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"0.4.2","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"0.4.2","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#installation-steps","content":" ","version":"0.4.2","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=0.4.2 bash   ","version":"0.4.2","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#homebrew","content":" # installs latest release brew tap hauler-dev/homebrew-tap brew install hauler   ","version":"0.4.2","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#windows","content":" # coming soon   ","version":"0.4.2","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.2/introduction/install#manual-installation-steps","content":" # set the hauler version (i.e. &quot;0.4.2&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler  ","version":"0.4.2","tagName":"h2"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/0.4.2/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.2/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring users to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow users to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows users to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"0.4.2","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.2/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  go-containerregistryoras clicosign ","version":"0.4.2","tagName":"h2"},{"title":"Overview of Hauler Content","type":0,"sectionRef":"#","url":"/docs/0.4.2/guides-references/hauler-content/overview","content":"Overview of Hauler Content Hauler Content Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/0.4.2/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"0.4.2","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#example-use-of-hauler","content":" ","version":"0.4.2","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line:​  # add a image: neuvector/scanner:latest hauler store add image neuvector/scanner:latest # add a image with supply chain artifacts hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --key carbide-key.pub # add a chart: rancher-stable/rancher (v2.7.9) hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.7.9 # add a file: rke2-install.sh hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest:​  hauler store sync --files hauler-manfiest.yaml   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.1 key: carbide-key.pub --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.7.9 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh   ","version":"0.4.2","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"0.4.2","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"0.4.2","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"0.4.2","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store hauler store serve   ","version":"0.4.2","tagName":"h3"},{"title":"Copy the Hauler Store to a Registry​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#copy-the-hauler-store-to-a-registry","content":" # copy the content to a registry from the hauler store hauler store copy registry://harbor.example.com   ","version":"0.4.2","tagName":"h3"},{"title":"Copy the Hauler Store to a Directory​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.2/introduction/quickstart#copy-the-hauler-store-to-a-directory","content":" # copy the content to a directory from the hauler store hauler store copy dir://hauler-files  ","version":"0.4.2","tagName":"h3"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/0.4.2/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.2/known-limits#issues","content":" Copying SBOMS to AWS Elastic Container Registry (AWS ECR): When using hauler store copy to AWS ECR, the Software Bill of Materials (SBOM) attachement will fail to copy due to changes in the way cosign handles attachments. We are investigating a way forward to address this issue.https://github.com/sigstore/cosign/blob/main/specs/SBOM_SPEC.mdhttps://github.com/sigstore/cosign/issues/2755  ","version":"0.4.2","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.2/known-limits#limitations","content":" Display of Information in the Hauler Store: When using hauler store info with signature verification, you may encounter errors in the presentation of the number layers and size of layers in the store. Hauler is correctly fetching, storing, packaging, and distributing each image, but the presentation and display can error. We are actively working to address and fix this issue.  ","version":"0.4.2","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.2/known-limits#notices","content":" Upcoming Deprecated Command(s):​  hauler download (alternatively hauler dl) is deprecated and will be removed in a future release.hauler serve is deprecated and will be removed in a future release. ","version":"0.4.2","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/0.4.2/introduction/uninstall","content":"Uninstall Uninstall Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.2"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/0.4.3/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"0.4.3","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"0.4.3","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower users to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"0.4.3","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"0.4.3","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as images, charts, or files. These are the fundamental types of resources that Hauler understands and manages. To understand the term better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) artifact. OCI Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"0.4.3","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.3/core-concepts#declarative-content","content":" While manually adding content to Hauler is a straightforward way to get started, we recommend a much more sustainable approach. Hauler provides a declarative approach for each content type, allowing you to define all the content within a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. ","version":"0.4.3","tagName":"h3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/0.4.3/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/0.4.3/airgap-workflow#workflow-diagram","content":"   Airgap Workflow Documentation pending a future release! ","version":"0.4.3","tagName":"h2"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/0.4.3/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generates completion scripts for various shells download Download OCI content from a registry and populate it on disk help Help about any command serve Run one or more of hauler's embedded servers types store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"0.4.3","tagName":"h3"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/carbide-customers","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Example Workflow for Carbide​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-carbide","content":" # with signature verification hauler store sync --products carbide=v0.1.1 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products carbide=v0.1.1 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for RKE2​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-rke2","content":" # with signature verification hauler store sync --products rke2=v1.26.11+rke2r1 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products rke2=v1.26.11+rke2r1 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for K3S​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-k3s","content":" # with signature verification hauler store sync --products k3s=v1.26.11-k3s2 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products k3s=v1.26.11-k3s2 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for Rancher​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-rancher","content":" # with signature verification hauler store sync --products rancher=v2.8.1 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products rancher=v2.8.1 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for Cert-Manager​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-cert-manager","content":" # with signature verification hauler store sync --products cert-manager=v1.13.3 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products cert-manager=v1.13.3 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for Longhorn​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-longhorn","content":" # with signature verification hauler store sync --products longhorn=v1.5.3 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products longhorn=v1.5.3 --platform linux/amd64   ","version":"0.4.3","tagName":"h3"},{"title":"Example Workflow for NeuVector​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.3/guides-references/carbide-customers#example-workflow-for-neuvector","content":" # with signature verification hauler store sync --products neuvector=v2.6.6 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products neuvector=v2.6.6 --platform linux/amd64  ","version":"0.4.3","tagName":"h3"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/0.4.3/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"0.4.3","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.3/guides-references/cluster-images#example-output","content":" index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"0.4.3","tagName":"h3"},{"title":"Hauler Manifest using the Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.3/guides-references/cluster-images#hauler-manifest-using-the-images","content":" IMAGE_LIST_MODIFIED=$(cat &quot;$IMAGE_LIST&quot; | sed 's/^/ - name: /') # sed, stream editor, appends 2 spaces of indentation denotes # an entry in a list, then adds name: to match expected syntax   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: $IMAGE_LIST_MODIFIED   ","version":"0.4.3","tagName":"h3"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.3/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"0.4.3","tagName":"h3"},{"title":"Overview of Hauler Collections","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/hauler-collections/overview","content":"Overview of Hauler Collections Hauler Collections Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/0.4.3/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"0.4.3","tagName":"h3"},{"title":"Charts (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/hauler-content/charts","content":"Charts (Content Type) tip Hauler supports the experimental format of Helm Chart OCI Artifacts, but can also be represented as the usual Tarball Artifact! Helm charts represented as OCI content: # add a helm chart (defaults to latest version) hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; # add a specific version of a helm chart hauler store add chart loki --repo &quot;https://grafana.github.io/helm-charts&quot; --version 2.8.1 # install directly from the oci content HELM_EXPERIMENTAL_OCI=1 helm install loki oci://localhost:3000/library/loki --version 2.8.1 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Images (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/hauler-content/images","content":"Images (Content Type) Any OCI compatible image can be fetched remotely: # &quot;shorthand&quot; image references hauler store add image rancher/rancher:v2.8.1 # fully qualified image references hauler store add image ghcr.io/fluxcd/flux-cli@sha256:02aa820c3a9c57d67208afcfc4bce9661658c17d15940aea369da259d2b976dd # adds an arch/platform specific version of a multi-arch image to the haul/store. by default, hauler will pull and save all archs/platforms contained in the image manifest. hauler store add image rancher/rancher:v2.8.1 --platform linux/amd64 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Overview of Hauler Content","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/hauler-content/overview","content":"Overview of Hauler Content Hauler Content Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Files (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/hauler-content/files","content":"Files (Content Type) Generic content that can be represented as a file, either sourced locally or remotely: # local file hauler store add file path/to/local/file.txt # remote file with name hauler store add file https://get.rke2.io --name install.sh ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/0.4.3/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.3/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring users to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow users to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows users to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"0.4.3","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.3/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  go-containerregistryoras clicosign ","version":"0.4.3","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/0.4.3/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionCluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tDetailed Overview of Hauler Collections Hauler Content\tDetailed Overview of Hauler Content Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"0.4.3","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/0.4.3/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes or depedencies. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"0.4.3","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"0.4.3","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#installation-steps","content":" ","version":"0.4.3","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=0.4.3 bash   ","version":"0.4.3","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#homebrew","content":" # installs latest release brew tap hauler-dev/homebrew-tap brew install hauler   ","version":"0.4.3","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#windows","content":" # coming soon   ","version":"0.4.3","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.3/introduction/install#manual-installation-steps","content":" # set the hauler version (i.e. &quot;0.4.3&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler  ","version":"0.4.3","tagName":"h2"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.3/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/0.4.3/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store add chart:​  Add a local or remote chart to the content store.  Usage: hauler store add chart [flags] Examples: # add a local chart hauler store add chart path/to/chart/directory # add a local compressed chart hauler store add chart path/to/chart.tar.gz # add a remote chart hauler store add chart longhorn --repo &quot;https://charts.longhorn.io&quot; # add a specific version of a chart hauler store add chart rancher --repo &quot;https://releases.rancher.com/server-charts/latest&quot; --version &quot;2.6.2&quot; Flags: --ca-file string verify certificates of HTTPS-enabled servers using this CA bundle --cert-file string identify HTTPS client using this SSL certificate file -h, --help help for chart --insecure-skip-tls-verify skip tls certificate checks for the chart download --key-file string identify HTTPS client using this SSL key file --password string chart repository password where to locate the requested chart --repo string chart repository url where to locate the requested chart --username string chart repository username where to locate the requested chart --verify verify the package before using it --version string specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add file:​  Add a file to the content store.  Usage: hauler store add file [flags] Flags: -h, --help help for file -n, --name string (Optional) Name to assign to file in store Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add image:​  Add an image to the content store.  Usage: hauler store add image [flags] Flags: -h, --help help for image -k, --key string (Optional) Path to the key for digital signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) -t, --type string Filter on type (image, chart, file) (default &quot;all&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;pkg.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant server.  Usage: hauler store serve [flags] Available Commands: fileserver Serve the file server registry Serve the embedded registry Flags: -h, --help help for serve Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve registry:​  Serve the embedded registry  Usage: hauler store serve registry [flags] Flags: -c, --config string Path to a config file, will override all other configs --directory string Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int Port to listen on. (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve fileserver:​  Serve the fileserver  Usage: hauler store serve fileserver [flags] Flags: --directory string Directory to use for backend. Defaults to $PWD/store-files (default &quot;store-files&quot;) -h, --help help for fileserver -p, --port int Port to listen on. (default 8080) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h  ","version":"0.4.3","tagName":"h3"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/0.4.3/introduction/uninstall","content":"Uninstall Uninstall Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/0.4.4/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/0.4.4/airgap-workflow#workflow-diagram","content":"   Airgap Workflow Documentation pending a future release! ","version":"0.4.4","tagName":"h2"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/0.4.3/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.3/known-limits#issues","content":" Copying SBOMS to AWS Elastic Container Registry (AWS ECR): When using hauler store copy to AWS ECR, the Software Bill of Materials (SBOM) attachement will fail to copy due to changes in the way cosign handles attachments. We are investigating a way forward to address this issue.https://github.com/sigstore/cosign/blob/main/specs/SBOM_SPEC.mdhttps://github.com/sigstore/cosign/issues/2755  ","version":"0.4.3","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.3/known-limits#limitations","content":" No &quot;known&quot; limitations at this time but as a reminder, Hauler and it's documentation are in active development and not Generally Available (GA).  ","version":"0.4.3","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.3/known-limits#notices","content":" Upcoming Deprecated Command(s):​  hauler download (alternatively hauler dl) is deprecated and will be removed in a future release.hauler serve is deprecated and will be removed in a future release. ","version":"0.4.3","tagName":"h2"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/0.4.4/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"0.4.4","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"0.4.4","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower users to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"0.4.4","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"0.4.4","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as images, charts, or files. These are the fundamental types of resources that Hauler understands and manages. To understand the term better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) artifact. OCI Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"0.4.4","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/0.4.4/core-concepts#declarative-content","content":" While manually adding content to Hauler is a straightforward way to get started, we recommend a much more sustainable approach. Hauler provides a declarative approach for each content type, allowing you to define all the content within a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. ","version":"0.4.4","tagName":"h3"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/0.4.3/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.3"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"0.4.3","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#example-use-of-hauler","content":" ","version":"0.4.3","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line:​  # add a image: neuvector/scanner:latest hauler store add image neuvector/scanner:latest --platform linux/amd64 # add a image with supply chain artifacts hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --key carbide-key.pub --platform linux/amd64 # add a chart: rancher-stable/rancher (v2.8.1) hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.1 # add a file: rke2-install.sh hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest:​  hauler store sync --files hauler-manfiest.yaml   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.1 key: carbide-key.pub platform: linux/amd64 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.1 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh   ","version":"0.4.3","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"0.4.3","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"0.4.3","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"0.4.3","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store hauler store serve registry # serve the file content as a fileserver from the hauler store hauler store serve fileserver   ","version":"0.4.3","tagName":"h3"},{"title":"Copy the Hauler Store to a Registry​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#copy-the-hauler-store-to-a-registry","content":" # copy the content to a registry from the hauler store hauler store copy registry://harbor.example.com   ","version":"0.4.3","tagName":"h3"},{"title":"Copy the Hauler Store to a Directory​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.3/introduction/quickstart#copy-the-hauler-store-to-a-directory","content":" # copy the content to a directory from the hauler store hauler store copy dir://hauler-files  ","version":"0.4.3","tagName":"h3"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/0.4.4/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generates completion scripts for various shells download Download OCI content from a registry and populate it on disk help Help about any command serve Run one or more of hauler's embedded servers types store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"0.4.4","tagName":"h3"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/carbide-customers","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Example Workflow for Carbide​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-carbide","content":" Please see the Carbide Documentation for easily fetching and packing Carbide. We are actively working to improve this workflow.  ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for RKE2​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-rke2","content":" # with signature verification hauler store sync --products rke2=v1.26.13+rke2r1 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products rke2=v1.26.13+rke2r1 --platform linux/amd64   ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for K3S​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-k3s","content":" # with signature verification hauler store sync --products k3s=v1.26.13-k3s2 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products k3s=v1.26.13-k3s2 --platform linux/amd64   ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for Rancher​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-rancher","content":" # with signature verification hauler store sync --products rancher=v2.8.2 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products rancher=v2.8.2 --platform linux/amd64   ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for Cert-Manager​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-cert-manager","content":" # with signature verification hauler store sync --products cert-manager=v1.14.2 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products cert-manager=v1.14.2 --platform linux/amd64   ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for Longhorn​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-longhorn","content":" # with signature verification hauler store sync --products longhorn=v1.6.0 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products longhorn=v1.6.0 --platform linux/amd64   ","version":"0.4.4","tagName":"h3"},{"title":"Example Workflow for NeuVector​","type":1,"pageTitle":"RGS Carbide Customers","url":"/docs/0.4.4/guides-references/carbide-customers#example-workflow-for-neuvector","content":" # with signature verification hauler store sync --products neuvector=v2.7.3 --key carbide-key.pub --platform linux/amd64 # without signature verification hauler store sync --products neuvector=v2.7.3 --platform linux/amd64  ","version":"0.4.4","tagName":"h3"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/0.4.4/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"0.4.4","tagName":"h3"},{"title":"Overview of Hauler Collections","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/hauler-collections/overview","content":"Overview of Hauler Collections Hauler Collections Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.4/guides-references/cluster-images#example-output","content":" index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"0.4.4","tagName":"h3"},{"title":"Hauler Manifest using the Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.4/guides-references/cluster-images#hauler-manifest-using-the-images","content":" IMAGE_LIST_MODIFIED=$(cat &quot;$IMAGE_LIST&quot; | sed 's/^/ - name: /') # sed, stream editor, appends 2 spaces of indentation denotes # an entry in a list, then adds name: to match expected syntax   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: $IMAGE_LIST_MODIFIED   ","version":"0.4.4","tagName":"h3"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/0.4.4/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images-example spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"0.4.4","tagName":"h3"},{"title":"Charts (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/hauler-content/charts","content":"Charts (Content Type) tip Hauler supports the experimental format of Helm Chart OCI Artifacts, but can also be represented as the usual Tarball Artifact! Helm charts represented as OCI content: # add a helm chart (defaults to latest version) hauler store add chart loki --repo https://grafana.github.io/helm-charts # add a specific version of a helm chart hauler store add chart loki --repo https://grafana.github.io/helm-charts --version 5.42.2 # install directly from the oci content helm install loki oci://localhost:3000/library/loki --version 5.42.2 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Files (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/hauler-content/files","content":"Files (Content Type) Generic content that can be represented as a file, either sourced locally or remotely: # local file hauler store add file path/to/local/file.txt # remote file with name hauler store add file https://get.rke2.io --name install.sh ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/0.4.4/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"0.4.4","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/0.4.4/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionCluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tDetailed Overview of Hauler Collections Hauler Content\tDetailed Overview of Hauler Content Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"0.4.4","tagName":"h2"},{"title":"Images (Content Type)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/hauler-content/images","content":"Images (Content Type) Any OCI compatible image can be fetched remotely: # &quot;shorthand&quot; image references hauler store add image rancher/rancher:v2.8.2 # fully qualified image references hauler store add image ghcr.io/fluxcd/flux-cli@sha256:02aa820c3a9c57d67208afcfc4bce9661658c17d15940aea369da259d2b976dd # adds an arch/platform specific version of a multi-arch image to the haul/store. by default, hauler will pull and save all archs/platforms contained in the image manifest. hauler store add image rancher/rancher:v2.8.2 --platform linux/amd64 ","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Overview of Hauler Content","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/hauler-content/overview","content":"Overview of Hauler Content Hauler Content Overview Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/0.4.4/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/0.4.4/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store add chart:​  Add a local or remote chart to the content store.  Usage: hauler store add chart [flags] Examples: # add a local chart hauler store add chart path/to/chart/directory # add a local compressed chart hauler store add chart path/to/chart.tar.gz # add a remote chart hauler store add chart longhorn --repo &quot;https://charts.longhorn.io&quot; # add a specific version of a chart hauler store add chart rancher --repo &quot;https://releases.rancher.com/server-charts/latest&quot; --version &quot;2.6.2&quot; Flags: --ca-file string verify certificates of HTTPS-enabled servers using this CA bundle --cert-file string identify HTTPS client using this SSL certificate file -h, --help help for chart --insecure-skip-tls-verify skip tls certificate checks for the chart download --key-file string identify HTTPS client using this SSL key file --password string chart repository password where to locate the requested chart --repo string chart repository url where to locate the requested chart --username string chart repository username where to locate the requested chart --verify verify the package before using it --version string specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add file:​  Add a file to the content store.  Usage: hauler store add file [flags] Flags: -h, --help help for file -n, --name string (Optional) Name to assign to file in store Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add image:​  Add an image to the content store.  Usage: hauler store add image [flags] Flags: -h, --help help for image -k, --key string (Optional) Path to the key for digital signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) -t, --type string Filter on type (image, chart, file) (default &quot;all&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;pkg.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant server.  Usage: hauler store serve [flags] Available Commands: fileserver Serve the file server registry Serve the embedded registry Flags: -h, --help help for serve Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve registry:​  Serve the embedded registry  Usage: hauler store serve registry [flags] Flags: -c, --config string Path to a config file, will override all other configs --directory string Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int Port to listen on. (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve fileserver:​  Serve the fileserver  Usage: hauler store serve fileserver [flags] Flags: --directory string Directory to use for backend. Defaults to $PWD/store-files (default &quot;store-files&quot;) -h, --help help for fileserver -p, --port int Port to listen on. (default 8080) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)h  ","version":"0.4.4","tagName":"h3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/0.4.4/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.4/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring users to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow users to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows users to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"0.4.4","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/0.4.4/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  go-containerregistryoras clicosign ","version":"0.4.4","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/0.4.4/introduction/uninstall","content":"Uninstall Uninstall Documentation pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/0.4.4/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"0.4.4","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#example-use-of-hauler","content":" ","version":"0.4.4","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line:​  # add a image: neuvector/scanner:latest hauler store add image neuvector/scanner:latest --platform linux/amd64 # add a image with supply chain artifacts hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --key carbide-key.pub --platform linux/amd64 # add a chart: rancher-stable/rancher (v2.8.2) hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.2 # add a file: rke2-install.sh hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest:​  hauler store sync --files hauler-manfiest.yaml   hauler-manfiest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.1 key: carbide-key.pub platform: linux/amd64 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh   ","version":"0.4.4","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"0.4.4","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"0.4.4","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"0.4.4","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store hauler store serve registry # serve the file content as a fileserver from the hauler store hauler store serve fileserver   ","version":"0.4.4","tagName":"h3"},{"title":"Copy the Hauler Store to a Registry​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#copy-the-hauler-store-to-a-registry","content":" # copy the content to a registry from the hauler store hauler store copy registry://harbor.example.com   ","version":"0.4.4","tagName":"h3"},{"title":"Copy the Hauler Store to a Directory​","type":1,"pageTitle":"Quickstart","url":"/docs/0.4.4/introduction/quickstart#copy-the-hauler-store-to-a-directory","content":" # copy the content to a directory from the hauler store hauler store copy dir://hauler-files  ","version":"0.4.4","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/0.4.4/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes or depedencies. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"0.4.4","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"0.4.4","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#installation-steps","content":" ","version":"0.4.4","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=0.4.4 bash   ","version":"0.4.4","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#homebrew","content":" # installs latest release brew tap hauler-dev/homebrew-tap brew install hauler   ","version":"0.4.4","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#windows","content":" # coming soon   ","version":"0.4.4","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/0.4.4/introduction/install#manual-installation-steps","content":" # set the hauler version (i.e. &quot;0.4.4&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler  ","version":"0.4.4","tagName":"h2"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/0.4.4/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"0.4.4"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.4/known-limits#issues","content":" Copying SBOMS to AWS Elastic Container Registry (AWS ECR): When using hauler store copy to AWS ECR, the Software Bill of Materials (SBOM) attachement will fail to copy due to changes in the way cosign handles attachments. We are investigating a way forward to address this issue.https://github.com/sigstore/cosign/blob/main/specs/SBOM_SPEC.mdhttps://github.com/sigstore/cosign/issues/2755  ","version":"0.4.4","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.4/known-limits#limitations","content":" No &quot;known&quot; limitations at this time but as a reminder, Hauler and the Hauler Documentation are in active development and not Generally Available (GA).  ","version":"0.4.4","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/0.4.4/known-limits#notices","content":" Upcoming Deprecated Command(s):​  hauler download (alternatively hauler dl) is deprecated and will be removed in a future release.hauler serve is deprecated and will be removed in a future release. ","version":"0.4.4","tagName":"h2"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/1.0.0/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.0/airgap-workflow#workflow-diagram","content":"   ","version":"1.0.0","tagName":"h2"},{"title":"What's an Airgap?​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.0/airgap-workflow#whats-an-airgap","content":" An airgap is a highly secure environment that is physically isolated from external connectivity (usually the internet), ensuring complete isolation from other environments by preventing unauthorized access or data transfers.  ","version":"1.0.0","tagName":"h2"},{"title":"Example Use Cases​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.0/airgap-workflow#example-use-cases","content":" Government and Military: These airgaps protect sensitive government and military information and critical defense infrastructure, ensuring that classified data remains secure and inaccessible to unauthorized entities.Critical Infrastructure: These airgaps secure power grids, water supply systems, and transportation networks from cyber threats, shielding them from potential disruptions and ensuring their continuous operation.Financial Institutions: These airgaps safeguard financial transactions and customer data from cyberattacks, maintaining the trust and integrity of financial systems.Research Facilities: These airgaps protect valuable research data, intellectual property, and proprietary information, preserving the integrity and confidentiality of research efforts.  ","version":"1.0.0","tagName":"h3"},{"title":"Challenges of an Airgap​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.0/airgap-workflow#challenges-of-an-airgap","content":" Data Transfers: Transferring data in and out of an airgapped system is complex due to the lack of network connectivity, often necessitating the use of physical media, trusted intermediaries, and meticulous approval processes to ensure data security.Usability vs. Security Balance: Balancing security with usability in airgapped environments can be intricate, as the limited convenience poses challenges for user interactions and system operations.Maintenance Complexity: Regular system updates, package and dependency updates, and overall maintenance can be challenging in airgapped systems, as the limited network connectivity complicates the process, requiring meticulous planning and execution.Costly Implementation: Implementing and maintaining airgapped systems can be costly, demanding specialized workflows, protocols, and security measures to uphold the system's integrity and security. ","version":"1.0.0","tagName":"h2"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/carbide-customers","content":"RGS Carbide Customers For all supported customers of Rancher Government, under the umbrella of Rancher Government Carbide, there is addon functionality within Hauler. Hauler has the the ability to reference Collections from the Carbide Secured Registry (CSR). Hauler is built to allow operators to fetch, store, package, and distribute content and collections, but most operators may be unsure of what to fetch, store, package, and distribue and that is where our supported customers are able to leverage these pre-defined manifests for all of the Rancher products. Below are some of the available product flags. Please see the Carbide Documentation for easily fetching, packing, and distributing Carbide with the hauler store sync --products &lt;product&gt;=&lt;product-version&gt;. Please know that we are actively working to improve this workflow. Connected EnvironmentsDisconnected Environments","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/1.0.0/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"1.0.0","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"1.0.0","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower operators to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"1.0.0","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"1.0.0","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as container images, helm charts, or files. These are the fundamental types of artifacts for Hauler. To understand it a little bit better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) Compliant Artifact. OCI Compliant Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"1.0.0","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.0/core-concepts#declarative-content","content":" While manually adding content to Hauler is an easy way to get started, there is a more sustainable approach... Hauler provides a declarative and programmatic approach by allowing operators to define content within a configuration file, known as a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. Check it out here! ","version":"1.0.0","tagName":"h3"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/docs/1.0.0/feedback","content":"Feedback Feedback is critical to us to continue to improve Hauler and accelerate your mission. For any issues, concerns, or questions, please open an issue: https://github.com/hauler-dev/hauler/issues","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/1.0.0/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generates completion scripts for various shells help Help about any command login Log in to a registry store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"1.0.0","tagName":"h3"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/1.0.0/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"1.0.0","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Fetch Cluster Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.0/guides-references/cluster-images#fetch-cluster-images","content":" # fetch all images in the cluster, remove duplicates, alphabetize, and put on a newline export IMAGE_LIST=$(kubectl get pods --all-namespaces -o jsonpath=&quot;{.items[*].spec.containers[*].image}&quot; | sed 's/ /\\n/g' | sort | uniq)   ","version":"1.0.0","tagName":"h2"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.0/guides-references/cluster-images#example-output","content":" # view the list of images from the cluster echo $IMAGE_LIST index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"1.0.0","tagName":"h2"},{"title":"Generate Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.0/guides-references/cluster-images#generate-hauler-manifest","content":" # add the required formatting for the image list export IMAGE_LIST_MODIFIED=$(echo &quot;${IMAGE_LIST} | sed 's/^/ - name: /'&quot;) # create the hauler manifest with the updated image list cat &lt;&lt; EOF &gt;&gt; hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: $IMAGE_LIST_MODIFIED EOF   ","version":"1.0.0","tagName":"h2"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.0/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/1.0.0/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.  Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"1.0.0","tagName":"h3"},{"title":"Hauler Community Collections","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/hauler-collections/community-collections","content":"Hauler Community Collections Hauler Community Collections are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler Content - Charts","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/hauler-content/charts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler Command Line for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.0/guides-references/hauler-content/charts#hauler-command-line-for-charts","content":" hauler store add chart &lt;chart name&gt; --repo &lt;chart repository&gt; --version &lt;chart version&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Commands for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.0/guides-references/hauler-content/charts#example-commands-for-charts","content":" # fetch helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.2   ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Manifest for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.0/guides-references/hauler-content/charts#hauler-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: &lt;chart name&gt; repoURL: &lt;chart repository&gt; version: &lt;chart version&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.0/guides-references/hauler-content/charts#example-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2  ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Content - Files","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/hauler-content/files","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler Command Line for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.0/guides-references/hauler-content/files#hauler-command-line-for-files","content":" hauler store add file &lt;file&gt; --name &lt;name&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Commands for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.0/guides-references/hauler-content/files#example-commands-for-files","content":" # fetch remote file hauler store add file https://get.rke2.io # fetch local file and assign new name hauler store add file path/to/local/file.txt --name local-file.txt   ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Manifest for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.0/guides-references/hauler-content/files#hauler-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: &lt;file&gt; name: &lt;name&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.0/guides-references/hauler-content/files#example-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Manifests","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/manifests","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.0/guides-references/manifests#example-manifest-for-images","content":" Please review the Hauler Content Pages for Images for more detailed information.  hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64   ","version":"1.0.0","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.0/guides-references/manifests#example-manifest-for-charts","content":" Please review the Hauler Content Pages for Charts for more detailed information.  hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2   ","version":"1.0.0","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.0/guides-references/manifests#example-manifest-for-files","content":" Please review the Hauler Content Pages for Files for more detailed information.  hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.0.0","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/1.0.0/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionHauler Manifests\tExample Hauler Manifests Cluster Images\tCreate a Hauler Store from Images on a Cluster Hauler Collections\tOverview of Hauler Collections Hauler Content - Images\tHauler Content Type - Images Hauler Content - Charts\tHauler Content Type - Charts Hauler Content - Files\tHauler Content Type - Files Hauler Command Line\tDetailed Overview of the Hauler Command Line Interface ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Content - Images","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/hauler-content/images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Hauler Command Line for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.0/guides-references/hauler-content/images#hauler-command-line-for-images","content":" hauler store add image &lt;image reference&gt; --platform &lt;platform&gt; --key &lt;cosign public key&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Commands for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.0/guides-references/hauler-content/images#example-commands-for-images","content":" # fetch image hauler store add image neuvector/scanner # fetch image with full image reference hauler store add image name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest hauler store add image docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform hauler store add image docker.io/longhornio/longhorn-ui:v1.6.0 --platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification hauler store add image docker.io/longhornio/longhorn-manager:v1.6.0 --platform linux/amd64 --key cosign-public-key.pub   ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Manifest for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.0/guides-references/hauler-content/images#hauler-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: - name: &lt;image reference&gt; key: &lt;cosign public key&gt; platform: &lt;platform&gt;   ","version":"1.0.0","tagName":"h2"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.0/guides-references/hauler-content/images#example-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64  ","version":"1.0.0","tagName":"h2"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/1.0.0/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/1.0.0/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring operators to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow operators to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows operators to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"1.0.0","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/1.0.0/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  oras clicosigngo-containerregistry ","version":"1.0.0","tagName":"h2"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.0/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/1.0.0/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Interact with hauler's embedded content store Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant registry or file server sync Sync content to the embedded content store Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store add image:​  Add an image to the content store.  Usage: hauler store add image [flags] Flags: -h, --help help for image -k, --key string (Optional) Path to the key for digital signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add chart:​  Add a local or remote chart to the content store.  Usage: hauler store add chart [flags] Examples: # add a local chart hauler store add chart path/to/chart/directory # add a local compressed chart hauler store add chart path/to/chart.tar.gz # add a remote chart hauler store add chart longhorn --repo &quot;https://charts.longhorn.io&quot; # add a specific version of a chart hauler store add chart rancher --repo &quot;https://releases.rancher.com/server-charts/latest&quot; --version &quot;2.6.2&quot; Flags: --ca-file string verify certificates of HTTPS-enabled servers using this CA bundle --cert-file string identify HTTPS client using this SSL certificate file -h, --help help for chart --insecure-skip-tls-verify skip tls certificate checks for the chart download --key-file string identify HTTPS client using this SSL key file --password string chart repository password where to locate the requested chart --repo string chart repository url where to locate the requested chart --username string chart repository username where to locate the requested chart --verify verify the package before using it --version string specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add file:​  Add a file to the content store.  Usage: hauler store add file [flags] Flags: -h, --help help for file -n, --name string (Optional) Name to assign to file in store Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) -t, --type string Filter on type (image, chart, file, sigs, atts, sbom) (default &quot;all&quot;) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;haul.tar.zst&quot;) -h, --help help for save Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant registry or file server.  Usage: hauler store serve [flags] hauler store serve [command] Available Commands: fileserver Serve the file server registry Serve the embedded registry Flags: -h, --help help for serve Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store serve [command] --help&quot; for more information about a command.   hauler store serve registry:​  Serve the embedded registry  Usage: hauler store serve registry [flags] Flags: -c, --config string Path to a config file, will override all other configs --directory string Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int Port to listen on. (default 5000) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve fileserver:​  Serve the fileserver  Usage: hauler store serve fileserver [flags] Flags: --directory string Directory to use for backend. Defaults to $PWD/store-files (default &quot;store-files&quot;) -h, --help help for fileserver -p, --port int Port to listen on. (default 8080) Global Flags: --cache string Location of where to store cache data (defaults to $XDG_CACHE_DIR/hauler) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)  ","version":"1.0.0","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/1.0.0/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes, depedencies, or runtime environment. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"1.0.0","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"1.0.0","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#installation-steps","content":" ","version":"1.0.0","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=1.0.0 bash   ","version":"1.0.0","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#homebrew","content":" # installs latest release brew tap hauler-dev/homebrew-tap brew install hauler   ","version":"1.0.0","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#windows","content":" # coming soon   ","version":"1.0.0","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#manual-installation-steps","content":" ","version":"1.0.0","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#linuxdarwin-1","content":" # set the hauler version (i.e. &quot;1.0.0&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler   ","version":"1.0.0","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#homebrew-1","content":" # not applicable   ","version":"1.0.0","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/1.0.0/introduction/install#windows-1","content":" # coming soon  ","version":"1.0.0","tagName":"h3"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/1.0.0/introduction/uninstall","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#uninstallation-steps","content":" ","version":"1.0.0","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#linuxdarwin","content":" # uninstall hauler curl -sfL https://get.hauler.dev | HAULER_UNINSTALL=true bash   ","version":"1.0.0","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#homebrew","content":" # installs latest release brew uninstall hauler   ","version":"1.0.0","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#windows","content":" # coming soon   ","version":"1.0.0","tagName":"h3"},{"title":"Manual Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#manual-uninstallation-steps","content":" ","version":"1.0.0","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#linuxdarwin-1","content":" # remove the hauler binary sudo rm -f /usr/local/bin/hauler # remove the working/installation directory rm -rf &quot;$HOME/.hauler&quot;   ","version":"1.0.0","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#homebrew-1","content":" # not applicable   ","version":"1.0.0","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.0/introduction/uninstall#windows-1","content":" # coming soon  ","version":"1.0.0","tagName":"h3"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/1.0.0/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.0/known-limits#issues","content":" No Issues at this time.  ","version":"1.0.0","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.0/known-limits#limitations","content":" When using a store for hauler that has the same name of a helm chart, hauler will fail to fetch the chart. For example, if you tried to use a store name of rancher with a helm chart name rancher, the fetch will fail due to the fact that helm defaults to using an exisiting local directory, if it matches the name of the chart.https://github.com/helm/helm/blob/e81f6140ddb22bc99a08f7409522a8dbe5338ee3/pkg/action/install.go#L714-L815  ","version":"1.0.0","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.0/known-limits#notices","content":" No Notices at this time. ","version":"1.0.0","tagName":"h2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/1.0.0/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.0"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"1.0.0","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#example-use-of-hauler","content":" ","version":"1.0.0","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line: # add a image... defaults to docker.io hauler store add image neuvector/scanner:latest # add a image with a specific platform and with supply chain artifacts # may not work for all users due to the specified registry hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --platform linux/amd64 --key carbide-key.pub # add a helm chart with a specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.2 # add a file and assign it a new name hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest: hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.6.0 key: carbide-key.pub platform: linux/amd64 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh # fetch the content from hauler manifest hauler store sync --files hauler-manifest.yaml   ","version":"1.0.0","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"1.0.0","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"1.0.0","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"1.0.0","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store # defaults to &lt;FQDN or IP&gt;:5000 hauler store serve registry # serve the file content as a fileserver from the hauler store # defaults to &lt;FQDN or IP&gt;:8080 hauler store serve fileserver   ","version":"1.0.0","tagName":"h3"},{"title":"Copy the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.0/introduction/quickstart#copy-the-hauler-store","content":" # copy the content to a registry from the hauler store # copies oci compliant artifacts hauler store copy registry://harbor.example.com # copy the content to a directory from the hauler store # copies non oci compliant artifacts hauler store copy dir://hauler-files  ","version":"1.0.0","tagName":"h3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/1.0.x/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.x/airgap-workflow#workflow-diagram","content":"   ","version":"1.0.x","tagName":"h2"},{"title":"What's an Airgap?​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.x/airgap-workflow#whats-an-airgap","content":" An airgap is a highly secure environment that is physically isolated from external connectivity (usually the internet), ensuring complete isolation from other environments by preventing unauthorized access or data transfers.  ","version":"1.0.x","tagName":"h2"},{"title":"Example Use Cases​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.x/airgap-workflow#example-use-cases","content":" Government and Military: These airgaps protect sensitive government and military information and critical defense infrastructure, ensuring that classified data remains secure and inaccessible to unauthorized entities.Critical Infrastructure: These airgaps secure power grids, water supply systems, and transportation networks from cyber threats, shielding them from potential disruptions and ensuring their continuous operation.Financial Institutions: These airgaps safeguard financial transactions and customer data from cyberattacks, maintaining the trust and integrity of financial systems.Research Facilities: These airgaps protect valuable research data, intellectual property, and proprietary information, preserving the integrity and confidentiality of research efforts.  ","version":"1.0.x","tagName":"h3"},{"title":"Challenges of an Airgap​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/1.0.x/airgap-workflow#challenges-of-an-airgap","content":" Data Transfers: Transferring data in and out of an airgapped system is complex due to the lack of network connectivity, often necessitating the use of physical media, trusted intermediaries, and meticulous approval processes to ensure data security.Usability vs. Security Balance: Balancing security with usability in airgapped environments can be intricate, as the limited convenience poses challenges for user interactions and system operations.Maintenance Complexity: Regular system updates, package and dependency updates, and overall maintenance can be challenging in airgapped systems, as the limited network connectivity complicates the process, requiring meticulous planning and execution.Costly Implementation: Implementing and maintaining airgapped systems can be costly, demanding specialized workflows, protocols, and security measures to uphold the system's integrity and security. ","version":"1.0.x","tagName":"h2"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/1.0.x/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"1.0.x","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"1.0.x","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower operators to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"1.0.x","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"1.0.x","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as container images, helm charts, or files. These are the fundamental types of artifacts for Hauler. To understand it a little bit better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) Compliant Artifact. OCI Compliant Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"1.0.x","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/1.0.x/core-concepts#declarative-content","content":" While manually adding content to Hauler is an easy way to get started, there is a more sustainable approach... Hauler provides a declarative and programmatic approach by allowing operators to define content within a configuration file, known as a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. Check it out here! ","version":"1.0.x","tagName":"h3"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/docs/1.0.x/feedback","content":"Feedback Feedback is critical to us to continue to improve Hauler and accelerate your mission. For any issues, concerns, or questions, please open an issue: https://github.com/hauler-dev/hauler/issues","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/carbide-customers","content":"RGS Carbide Customers For all supported customers of Rancher Government, under the umbrella of Rancher Government Carbide, there is addon functionality within Hauler. Hauler has the the ability to reference Collections from the Carbide Secured Registry (CSR). Hauler is built to allow operators to fetch, store, package, and distribute content and collections, but most operators may be unsure of what to fetch, store, package, and distribue and that is where our supported customers are able to leverage these pre-defined manifests for all of the Rancher products. Below are some of the available product flags. Please see the Carbide Documentation for easily fetching, packing, and distributing Carbide with the hauler store sync --products &lt;product&gt;=&lt;product-version&gt;. Please know that we are actively working to improve this workflow. Connected EnvironmentsDisconnected Environments","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/command-line/hauler","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler (Command)","url":"/docs/1.0.x/guides-references/command-line/hauler#command-overview","content":" Interact with Hauler's command line.  Usage: hauler [flags] hauler [command] Available Commands: completion Generates completion scripts for various shells help Help about any command login Log in to a registry store Interact with hauler's embedded content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"1.0.x","tagName":"h3"},{"title":"Hauler Login (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/command-line/hauler-login","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Login (Command)","url":"/docs/1.0.x/guides-references/command-line/hauler-login#command-overview","content":" Log in to a registry  Usage: hauler login [flags] Examples: # login to registry.example.com hauler login registry.example.com -u bob -p haulin Flags: -h, --help help for login -p, --password string Password --password-stdin Take the password from stdin -u, --username string Username Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"1.0.x","tagName":"h3"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Fetch Cluster Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.x/guides-references/cluster-images#fetch-cluster-images","content":" # fetch all images in the cluster, remove duplicates, alphabetize, and put on a newline export IMAGE_LIST=$(kubectl get pods --all-namespaces -o jsonpath=&quot;{.items[*].spec.containers[*].image}&quot; | sed 's/ /\\n/g' | sort | uniq)   ","version":"1.0.x","tagName":"h2"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.x/guides-references/cluster-images#example-output","content":" # view the list of images from the cluster echo $IMAGE_LIST index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"1.0.x","tagName":"h2"},{"title":"Generate Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.x/guides-references/cluster-images#generate-hauler-manifest","content":" # add the required formatting for the image list export IMAGE_LIST_MODIFIED=$(echo &quot;${IMAGE_LIST} | sed 's/^/ - name: /'&quot;) # create the hauler manifest with the updated image list cat &lt;&lt; EOF &gt;&gt; hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: $IMAGE_LIST_MODIFIED EOF   ","version":"1.0.x","tagName":"h2"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/1.0.x/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Completion (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/command-line/hauler-completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion (Command)","url":"/docs/1.0.x/guides-references/command-line/hauler-completion#command-overview","content":" Generate an autocompletion script for hauler for the specified shell.  Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"1.0.x","tagName":"h3"},{"title":"Hauler Community Collections","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/hauler-collections/community-collections","content":"Hauler Community Collections Hauler Community Collections are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler Content - Charts","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/hauler-content/charts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler Command Line for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.x/guides-references/hauler-content/charts#hauler-command-line-for-charts","content":" hauler store add chart &lt;chart name&gt; --repo &lt;chart repository&gt; --version &lt;chart version&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Commands for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.x/guides-references/hauler-content/charts#example-commands-for-charts","content":" # fetch helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.2   ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Manifest for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.x/guides-references/hauler-content/charts#hauler-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: &lt;chart name&gt; repoURL: &lt;chart repository&gt; version: &lt;chart version&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Content - Charts","url":"/docs/1.0.x/guides-references/hauler-content/charts#example-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2  ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Version (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/command-line/hauler-version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version (Command)","url":"/docs/1.0.x/guides-references/command-line/hauler-version#command-overview","content":" Print Hauler's current version.   __ __ ___ __ __ __ _______ .______ | | | | / \\ | | | | | | | ____|| _ \\ | |__| | / ^ \\ | | | | | | | |__ | |_) | | __ | / /_\\ \\ | | | | | | | __| | / | | | | / _____ \\ | `--' | | `----.| |____ | |\\ \\----. |__| |__| /__/ \\__\\ \\______/ |_______||_______|| _| `._____| hauler: Airgap Swiss Army Knife GitVersion: 1.0.3 GitCommit: f7c24f6 GitTreeState: clean BuildDate: 2024-04-24T16:50:33Z GoVersion: go1.21.9 Compiler: gc Platform: darwin/arm64  ","version":"1.0.x","tagName":"h3"},{"title":"Hauler Content - Files","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/hauler-content/files","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler Command Line for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.x/guides-references/hauler-content/files#hauler-command-line-for-files","content":" hauler store add file &lt;file&gt; --name &lt;name&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Commands for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.x/guides-references/hauler-content/files#example-commands-for-files","content":" # fetch remote file hauler store add file https://get.rke2.io # fetch local file and assign new name hauler store add file path/to/local/file.txt --name local-file.txt   ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Manifest for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.x/guides-references/hauler-content/files#hauler-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: &lt;file&gt; name: &lt;name&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Content - Files","url":"/docs/1.0.x/guides-references/hauler-content/files#example-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.0.x","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/overview","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler Guides & Reference Documentation​","type":1,"pageTitle":"Overview","url":"/docs/1.0.x/guides-references/overview#hauler-guides--reference-documentation","content":" Guide or Reference Documentation\tDescriptionFetch Cluster Images\tFetch All Images on a Cluster RGS Carbide Customers\tOverview of Addons for Carbide Customers Bootstrapping Utilities\tOverview of Hauler Bootstrapping Utilities Hauler Manifests\tOverview of Hauler Manifests Hauler Collections\tOverview of Hauler Collections Hauler Content\tOverview of Hauler Content Types Hauler Command Line\tOverview of the Hauler Command Line Interface ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Content - Images","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/hauler-content/images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Hauler Command Line for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.x/guides-references/hauler-content/images#hauler-command-line-for-images","content":" hauler store add image &lt;image reference&gt; --platform &lt;platform&gt; --key &lt;cosign public key&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Commands for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.x/guides-references/hauler-content/images#example-commands-for-images","content":" # fetch image hauler store add image neuvector/scanner # fetch image with full image reference hauler store add image name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest hauler store add image docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform hauler store add image docker.io/longhornio/longhorn-ui:v1.6.0 --platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification hauler store add image docker.io/longhornio/longhorn-manager:v1.6.0 --platform linux/amd64 --key cosign-public-key.pub   ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Manifest for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.x/guides-references/hauler-content/images#hauler-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: - name: &lt;image reference&gt; key: &lt;cosign public key&gt; platform: &lt;platform&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Content - Images","url":"/docs/1.0.x/guides-references/hauler-content/images#example-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64  ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Manifests","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/manifests","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.x/guides-references/manifests#example-manifest-for-images","content":" Please review the Hauler Content Pages for Images for more detailed information.  hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags hauler.dev/key: &lt;cosign public key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64   ","version":"1.0.x","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.x/guides-references/manifests#example-manifest-for-charts","content":" Please review the Hauler Content Pages for Charts for more detailed information.  hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2   ","version":"1.0.x","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/1.0.x/guides-references/manifests#example-manifest-for-files","content":" Please review the Hauler Content Pages for Files for more detailed information.  hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Fileserver","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/utilities/fileserver","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Fileserver","url":"/docs/1.0.x/guides-references/utilities/fileserver#overview","content":" Hauler Fileserver docs are pending a future release!  ","version":"1.0.x","tagName":"h2"},{"title":"Example Commands for the Hauler Fileserver​","type":1,"pageTitle":"Hauler Fileserver","url":"/docs/1.0.x/guides-references/utilities/fileserver#example-commands-for-the-hauler-fileserver","content":" # serve fileserver hauler store serve fileserver # serve fileserver on specific port hauler store serve fileserver --port &lt;port&gt;  ","version":"1.0.x","tagName":"h2"},{"title":"Hauler Store (Command)","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/command-line/hauler-store","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store (Command)","url":"/docs/1.0.x/guides-references/command-line/hauler-store#command-overview","content":" Interact with Hauler's embedded content store.  Usage: hauler store [flags] hauler store [command] Aliases: store, s Available Commands: add Add content to store copy Copy all store contents to another OCI registry extract Extract content from the store to disk info Print out information about the store load Load a content store from a store archive save Save a content store to a store archive serve Expose the content of a local store through an OCI compliant registry or file server sync Sync content to the embedded content store Flags: --cache string (deprecated flag and currently not used) -h, --help help for store -s, --store string Location to create store at (default &quot;store&quot;) Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler store [command] --help&quot; for more information about a command.   hauler store add:​  Add content to store.  Usage: hauler store add [flags] hauler store add [command] Available Commands: chart Add a local or remote chart to the content store file Add a file to the content store image Add an image to the content store Flags: -h, --help help for add Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store add [command] --help&quot; for more information about a command.   hauler store add image:​  Add an image to the content store.  Usage: hauler store add image [flags] Flags: -h, --help help for image -k, --key string (Optional) Path to the key for digital signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add chart:​  Add a local or remote chart to the content store.  Usage: hauler store add chart [flags] Examples: # add a local chart hauler store add chart path/to/chart/directory # add a local compressed chart hauler store add chart path/to/chart.tar.gz # add a remote chart hauler store add chart longhorn --repo &quot;https://charts.longhorn.io&quot; # add a specific version of a chart hauler store add chart rancher --repo &quot;https://releases.rancher.com/server-charts/latest&quot; --version &quot;2.6.2&quot; Flags: --ca-file string verify certificates of HTTPS-enabled servers using this CA bundle --cert-file string identify HTTPS client using this SSL certificate file -h, --help help for chart --insecure-skip-tls-verify skip tls certificate checks for the chart download --key-file string identify HTTPS client using this SSL key file --password string chart repository password where to locate the requested chart --repo string chart repository url where to locate the requested chart --username string chart repository username where to locate the requested chart --verify verify the package before using it --version string specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store add file:​  Add a file to the content store.  Usage: hauler store add file [flags] Flags: -h, --help help for file -n, --name string (Optional) Name to assign to file in store Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store copy:​  Copy all store contents to another OCI registry.  Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure Toggle allowing insecure connections when copying to a remote registry -p, --password string Password when copying to an authenticated remote registry --plain-http Toggle allowing plain http connections when copying to a remote registry -u, --username string Username when copying to an authenticated remote registry Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store extract:​  Extract content from the store to disk.  Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string Directory to save contents to (defaults to current directory) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store info:​  Print out information about the store.  Usage: hauler store info [flags] Aliases: info, i, list, ls Flags: -h, --help help for info -o, --output string Output format (table, json) (default &quot;table&quot;) -t, --type string Filter on type (image, chart, file, sigs, atts, sbom) (default &quot;all&quot;) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store load:​  Load a content store from a store archive.  Usage: hauler store load [flags] Flags: -h, --help help for load -t, --tempdir string overrides the default directory for temporary files, as returned by your OS. Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store save:​  Save a content store to a store archive.  Usage: hauler store save [flags] Flags: -f, --filename string Name of archive (default &quot;haul.tar.zst&quot;) -h, --help help for save Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store sync:​  Sync content to the embedded content store.  Usage: hauler store sync [flags] Flags: -f, --files strings Path to content files -h, --help help for sync -k, --key string (Optional) Path to the key for signature verification -p, --platform string (Optional) Specific platform to save. i.e. linux/amd64. Defaults to all if flag is omitted. -c, --product-registry string (Optional) Specific Product Registry to use. Defaults to RGS Carbide Registry (rgcrprod.azurecr.us). --products strings Used for RGS Carbide customers to supply a product and version and Hauler will retrieve the images. i.e. '--product rancher=v2.7.6' -r, --registry string (Optional) Default pull registry for image refs that are not specifying a registry name. Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve:​  Expose the content of a local store through an OCI compliant registry or file server.  Usage: hauler store serve [flags] hauler store serve [command] Available Commands: fileserver Serve the file server registry Serve the embedded registry Flags: -h, --help help for serve Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;) Use &quot;hauler store serve [command] --help&quot; for more information about a command.   hauler store serve registry:​  Serve the embedded registry  Usage: hauler store serve registry [flags] Flags: -c, --config string Path to a config file, will override all other configs --directory string Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int Port to listen on. (default 5000) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)   hauler store serve fileserver:​  Serve the fileserver  Usage: hauler store serve fileserver [flags] Flags: --directory string Directory to use for backend. Defaults to $PWD/fileserver (default &quot;fileserver&quot;) -h, --help help for fileserver -p, --port int Port to listen on. (default 8080) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string Location to create store at (default &quot;store&quot;)  ","version":"1.0.x","tagName":"h3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/1.0.x/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/1.0.x/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring operators to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow operators to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows operators to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"1.0.x","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/1.0.x/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  oras clicosigngo-containerregistry ","version":"1.0.x","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/1.0.x/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no specific prerequistes, depedencies, or runtime environment. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"1.0.x","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"1.0.x","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#installation-steps","content":" ","version":"1.0.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=1.0.0 bash   ","version":"1.0.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#homebrew","content":" # installs latest release brew tap hauler-dev/homebrew-tap brew install hauler   ","version":"1.0.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#windows","content":" # coming soon   ","version":"1.0.x","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#manual-installation-steps","content":" ","version":"1.0.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#linuxdarwin-1","content":" # set the hauler version (i.e. &quot;1.0.0&quot;) export vHauler=HAULER_VERSION # set the specific platform (i.e. &quot;linux&quot;) export platform=PLATFORM # set the specific arch (i.e. &quot;amd64&quot;) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler   ","version":"1.0.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#homebrew-1","content":" # not applicable   ","version":"1.0.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/1.0.x/introduction/install#windows-1","content":" # coming soon  ","version":"1.0.x","tagName":"h3"},{"title":"Hauler Registry","type":0,"sectionRef":"#","url":"/docs/1.0.x/guides-references/utilities/registry","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Registry","url":"/docs/1.0.x/guides-references/utilities/registry#overview","content":" Hauler Registry docs are pending a future release!  ","version":"1.0.x","tagName":"h2"},{"title":"Example Commands for the Hauler Registry​","type":1,"pageTitle":"Hauler Registry","url":"/docs/1.0.x/guides-references/utilities/registry#example-commands-for-the-hauler-registry","content":" # serve registry hauler store serve registry # serve registry on specific port hauler store serve registry --port &lt;port&gt; # serve registry on specific port with custom config hauler store serve registry --port &lt;port&gt; --config &lt;path-to-config&gt;   ","version":"1.0.x","tagName":"h2"},{"title":"Example Config for the Hauler Registry​","type":1,"pageTitle":"Hauler Registry","url":"/docs/1.0.x/guides-references/utilities/registry#example-config-for-the-hauler-registry","content":" These are all configuration options for the registry. Some options in the list are mutually exclusive. Read the detailed reference information about each option before finalizing your configuration.  You can learn more here --&gt; https://distribution.github.io/distribution/about/configuration  version: 0.1 log: accesslog: disabled: true level: debug formatter: text fields: service: registry environment: staging hooks: - type: mail disabled: true levels: - panic options: smtp: addr: mail.example.com:25 username: mailuser password: password insecure: true from: sender@example.com to: - errors@example.com loglevel: debug # deprecated: use &quot;log&quot; storage: filesystem: rootdirectory: /var/lib/registry maxthreads: 100 azure: accountname: accountname accountkey: base64encodedaccountkey container: containername rootdirectory: /az/object/name/prefix credentials: type: client_secret clientid: client_id_string tenantid: tenant_id_string secret: secret_string copy_status_poll_max_retry: 10 copy_status_poll_delay: 100ms gcs: bucket: bucketname keyfile: /path/to/keyfile credentials: type: service_account project_id: project_id_string private_key_id: private_key_id_string private_key: private_key_string client_email: client@example.com client_id: client_id_string auth_uri: http://example.com/auth_uri token_uri: http://example.com/token_uri auth_provider_x509_cert_url: http://example.com/provider_cert_url client_x509_cert_url: http://example.com/client_cert_url rootdirectory: /gcs/object/name/prefix chunksize: 5242880 s3: accesskey: awsaccesskey secretkey: awssecretkey region: us-west-1 regionendpoint: http://myobjects.local forcepathstyle: true accelerate: false bucket: bucketname encrypt: true keyid: mykeyid secure: true v4auth: true chunksize: 5242880 multipartcopychunksize: 33554432 multipartcopymaxconcurrency: 100 multipartcopythresholdsize: 33554432 rootdirectory: /s3/object/name/prefix usedualstack: false loglevel: debug inmemory: # This driver takes no parameters tag: concurrencylimit: 8 delete: enabled: false redirect: disable: false cache: blobdescriptor: redis blobdescriptorsize: 10000 maintenance: uploadpurging: enabled: true age: 168h interval: 24h dryrun: false readonly: enabled: false auth: silly: realm: silly-realm service: silly-service token: autoredirect: true realm: token-realm service: token-service issuer: registry-token-issuer rootcertbundle: /root/certs/bundle htpasswd: realm: basic-realm path: /path/to/htpasswd middleware: registry: - name: ARegistryMiddleware options: foo: bar repository: - name: ARepositoryMiddleware options: foo: bar storage: - name: cloudfront options: baseurl: https://my.cloudfronted.domain.com/ privatekey: /path/to/pem keypairid: cloudfrontkeypairid duration: 3000s ipfilteredby: awsregion awsregion: us-east-1, use-east-2 updatefrequency: 12h iprangesurl: https://ip-ranges.amazonaws.com/ip-ranges.json storage: - name: redirect options: baseurl: https://example.com/ http: addr: localhost:5000 prefix: /my/nested/registry/ host: https://myregistryaddress.org:5000 secret: asecretforlocaldevelopment relativeurls: false draintimeout: 60s tls: certificate: /path/to/x509/public key: /path/to/x509/private clientcas: - /path/to/ca.pem - /path/to/another/ca.pem letsencrypt: cachefile: /path/to/cache-file email: emailused@letsencrypt.com hosts: [myregistryaddress.org] directoryurl: https://acme-v02.api.letsencrypt.org/directory debug: addr: localhost:5001 prometheus: enabled: true path: /metrics headers: X-Content-Type-Options: [nosniff] http2: disabled: false h2c: enabled: false notifications: events: includereferences: true endpoints: - name: alistener disabled: false url: https://my.listener.com/event headers: &lt;http.Header&gt; timeout: 1s threshold: 10 backoff: 1s ignoredmediatypes: - application/octet-stream ignore: mediatypes: - application/octet-stream actions: - pull redis: addr: localhost:6379 password: asecret db: 0 dialtimeout: 10ms readtimeout: 10ms writetimeout: 10ms pool: maxidle: 16 maxactive: 64 idletimeout: 300s tls: enabled: false health: storagedriver: enabled: true interval: 10s threshold: 3 file: - file: /path/to/checked/file interval: 10s http: - uri: http://server.to.check/must/return/200 headers: Authorization: [Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==] statuscode: 200 timeout: 3s interval: 10s threshold: 3 tcp: - addr: redis-server.domain.com:6379 timeout: 3s interval: 10s threshold: 3 proxy: remoteurl: https://registry-1.docker.io username: [username] password: [password] ttl: 168h validation: manifests: urls: allow: - ^https?://([^/]+\\.)*example\\.com/ deny: - ^https?://www\\.example\\.com/  ","version":"1.0.x","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/1.0.x/introduction/uninstall","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#uninstallation-steps","content":" ","version":"1.0.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#linuxdarwin","content":" # uninstall hauler curl -sfL https://get.hauler.dev | HAULER_UNINSTALL=true bash   ","version":"1.0.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#homebrew","content":" # installs latest release brew uninstall hauler   ","version":"1.0.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#windows","content":" # coming soon   ","version":"1.0.x","tagName":"h3"},{"title":"Manual Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#manual-uninstallation-steps","content":" ","version":"1.0.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#linuxdarwin-1","content":" # remove the hauler binary sudo rm -f /usr/local/bin/hauler # remove the working/installation directory rm -rf &quot;$HOME/.hauler&quot;   ","version":"1.0.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#homebrew-1","content":" # not applicable   ","version":"1.0.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/1.0.x/introduction/uninstall#windows-1","content":" # coming soon  ","version":"1.0.x","tagName":"h3"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/1.0.x/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"1.0.x","tagName":"h2"},{"title":"Example Use of Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#example-use-of-hauler","content":" ","version":"1.0.x","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line: # add a image... defaults to docker.io hauler store add image neuvector/scanner:latest # add a image with a specific platform and with supply chain artifacts # may not work for all users due to the specified registry hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.5.2 --platform linux/amd64 --key carbide-key.pub # add a helm chart with a specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.8.2 # add a file and assign it a new name hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest: hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: neuvector/scanner:latest - name: rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.6.0 key: carbide-key.pub platform: linux/amd64 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.8.2 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh # fetch the content from hauler manifest hauler store sync --files hauler-manifest.yaml   ","version":"1.0.x","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"1.0.x","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst     airgap the haul.tar.zst to the disconnected environment    ","version":"1.0.x","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"1.0.x","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a registry from the hauler store # defaults to &lt;FQDN or IP&gt;:5000 hauler store serve registry # serve the file content as a fileserver from the hauler store # defaults to &lt;FQDN or IP&gt;:8080 hauler store serve fileserver   ","version":"1.0.x","tagName":"h3"},{"title":"Copy the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/1.0.x/introduction/quickstart#copy-the-hauler-store","content":" # copy the content to a registry from the hauler store # copies oci compliant artifacts hauler store copy registry://registry.example.com # copy the content to a directory from the hauler store # copies non oci compliant artifacts hauler store copy dir://hauler-files  ","version":"1.0.x","tagName":"h3"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/1.0.x/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.0.x"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.x/known-limits#issues","content":" No Issues at this time.  ","version":"1.0.x","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.x/known-limits#limitations","content":" When using a store for hauler that has the same name of a helm chart, hauler will fail to fetch the chart. For example, if you tried to use a store name of rancher with a helm chart name rancher, the fetch will fail due to the fact that helm defaults to using an exisiting local directory, if it matches the name of the chart.https://github.com/helm/helm/blob/e81f6140ddb22bc99a08f7409522a8dbe5338ee3/pkg/action/install.go#L714-L815 When using hauler, it will default to write temporary files to /tmp. If you do not have about 3x the amount of space available in your /tmp compared to the size of the store or the haul, then hauler may fail.  ","version":"1.0.x","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/1.0.x/known-limits#notices","content":" No Notices at this time. ","version":"1.0.x","tagName":"h2"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/next/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/next/airgap-workflow#workflow-diagram","content":"   ","version":"Next 🚧","tagName":"h2"},{"title":"What's an Airgap?​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/next/airgap-workflow#whats-an-airgap","content":" An airgap is a highly secure environment that is physically isolated from external connectivity (usually the internet), ensuring complete isolation from other environments by preventing unauthorized access or data transfers.  ","version":"Next 🚧","tagName":"h2"},{"title":"Example Use Cases​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/next/airgap-workflow#example-use-cases","content":" Government and Military: These airgaps protect sensitive government and military information and critical defense infrastructure, ensuring that classified data remains secure and inaccessible to unauthorized entities.Critical Infrastructure: These airgaps secure power grids, water supply systems, and transportation networks from cyber threats, shielding them from potential disruptions and ensuring their continuous operation.Financial Institutions: These airgaps safeguard financial transactions and customer data from cyberattacks, maintaining the trust and integrity of financial systems.Research Facilities: These airgaps protect valuable research data, intellectual property, and proprietary information, preserving the integrity and confidentiality of research efforts.  ","version":"Next 🚧","tagName":"h3"},{"title":"Challenges of an Airgap​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/next/airgap-workflow#challenges-of-an-airgap","content":" Data Transfers: Transferring data in and out of an airgapped system is complex due to the lack of network connectivity, often necessitating the use of physical media, trusted intermediaries, and meticulous approval processes to ensure data security.Usability vs. Security Balance: Balancing security with usability in airgapped environments can be intricate, as the limited convenience poses challenges for user interactions and system operations.Maintenance Complexity: Regular system updates, package and dependency updates, and overall maintenance can be challenging in airgapped systems, as the limited network connectivity complicates the process, requiring meticulous planning and execution.Costly Implementation: Implementing and maintaining airgapped systems can be costly, demanding specialized workflows, protocols, and security measures to uphold the system's integrity and security. ","version":"Next 🚧","tagName":"h2"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/next/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"Next 🚧","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"Next 🚧","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower operators to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"Next 🚧","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"Next 🚧","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as container images, helm charts, or files. These are the fundamental types of artifacts for Hauler. To understand it a little bit better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) Compliant Artifact. OCI Compliant Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"Next 🚧","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/next/core-concepts#declarative-content","content":" While manually adding content to Hauler is an easy way to get started, there is a more sustainable approach... Hauler provides a declarative and programmatic approach by allowing operators to define content within a configuration file, known as a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. Check it out here! ","version":"Next 🚧","tagName":"h3"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/docs/next/feedback","content":"Feedback Feedback is critical to us to continue to improve Hauler and accelerate your mission. For any issues, concerns, or questions, please open an issue: https://github.com/hauler-dev/hauler/issues","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Bootstrapping Utilities","type":0,"sectionRef":"#","url":"/docs/next/guides-references/bootstraping-utilities","content":"Bootstrapping Utilities Bootstrapping Utilities documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Hauler Collections","type":0,"sectionRef":"#","url":"/docs/next/guides-references/hauler-collections","content":"Hauler Collections Hauler Collections and Community Collections documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/next/guides-references/carbide-customers","content":"RGS Carbide Customers For all supported customers of Rancher Government, under the umbrella of Rancher Government Carbide, there is included addon functionality within Hauler. Hauler has the the ability to reference Collections from various registeries, including the Carbide Secured Registry (CSR). To better understand this workflow, Hauler is built to allow operators to fetch, store, package, and distribute various artifacts, but most operators may be unsure of what to fetch, store, package, and distribute, and that is where our supported customers are able to leverage predefined manifests, known as Collections, via the --products flag, through the Carbide Secured Registry (CSR), for all of Rancher Government products and solutions. Please see the Carbide Documentation for easily fetching, packing, and distributing Carbide with the hauler store sync --products &lt;product&gt;=&lt;product-version&gt;. Please know that we are actively working to improve this workflow and your feedback is appreciated! Carbide Docs for Connected EnvironmentsCarbide Docs for Disconnected Environments","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Container Runtimes Integrations","type":0,"sectionRef":"#","url":"/docs/next/guides-references/container-runtimes","content":"Container Runtimes Integrations Container Runtimes Integrations documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/next/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Fetch Cluster Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/next/guides-references/cluster-images#fetch-cluster-images","content":" # fetch all images in the cluster, remove duplicates, alphabetize, and put on a newline export IMAGE_LIST=$(kubectl get pods --all-namespaces -o jsonpath=&quot;{.items[*].spec.containers[*].image}&quot; | sed 's/ /\\n/g' | sort | uniq)   ","version":"Next 🚧","tagName":"h2"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/next/guides-references/cluster-images#example-output","content":" # view the list of images from the cluster echo $IMAGE_LIST index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"Next 🚧","tagName":"h2"},{"title":"Generate Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/next/guides-references/cluster-images#generate-hauler-manifest","content":" # add the required formatting for the image list export IMAGE_LIST_MODIFIED=$(echo &quot;${IMAGE_LIST}&quot; | sed 's/^/ - name: /') # create the hauler manifest with the updated image list cat &lt;&lt; EOF &gt;&gt; hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: $IMAGE_LIST_MODIFIED EOF   ","version":"Next 🚧","tagName":"h2"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/next/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"Next 🚧","tagName":"h2"},{"title":"Hauler Content","type":0,"sectionRef":"#","url":"/docs/next/guides-references/hauler-content","content":"Hauler Content Hauler Content documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/next/guides-references/overview","content":"Overview 📄️ Overview Reference Guides Overview Documentation for Hauler 📄️ Fetch Cluster Images Fetching Images on a Cluster Documentation 📄️ RGS Carbide Customers RGS Carbide Customers Documentation 📄️ Container Runtimes Integrations Container Runtimes Integrations Documentation 📄️ Bootstrapping Utilities Bootstrapping Utilities Documentation 📄️ Hauler Manifests Hauler Manifests Documentation 📄️ Hauler Content Hauler Content Documentation 📄️ Hauler Collections Hauler Collections Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Hauler Help","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/help","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Help","url":"/docs/next/hauler-usage/help#command-overview","content":" Usage: hauler [flags] hauler [command] Available Commands: completion Generate auto-completion scripts for various shells help Help about any command login Login to a registry store Interact with the content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Manifests","type":0,"sectionRef":"#","url":"/docs/next/guides-references/hauler-manifests","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/next/guides-references/hauler-manifests#example-manifest-for-images","content":" Please review the Hauler Content Pages for Images for more detailed information.  hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64   ","version":"Next 🚧","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/next/guides-references/hauler-manifests#example-manifest-for-charts","content":" Please review the Hauler Content Pages for Charts for more detailed information.  hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher-cluster-templates repoURL: oci://ghcr.io/rancherfederal/charts version: 0.5.2   ","version":"Next 🚧","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/next/guides-references/hauler-manifests#example-manifest-for-files","content":" Please review the Hauler Content Pages for Files for more detailed information.  hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"Next 🚧","tagName":"h2"},{"title":"Hauler Login","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/login","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Login","url":"/docs/next/hauler-usage/login#overview","content":" hauler login logs into an OCI Compliant registry that is stored at ~/.docker/config.json.  An example with available flags...  hauler login &lt;registry-url&gt; --username &lt;username&gt; --password &lt;password&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Login","url":"/docs/next/hauler-usage/login#command-overview","content":" Usage: hauler login [flags] Examples: # Log into registry.example.com hauler login registry.example.com -u bob -p haulin Flags: -h, --help help for login -p, --password string (Optional) Password to use for authentication --password-stdin (Optional) Password to use for authentication (from stdin) -u, --username string (Optional) Username to use for authentication Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/overview","content":"Overview 📄️ Overview Usage Documentation for Hauler 📄️ Hauler Help Hauler Usage Documentation 📄️ Hauler Login Hauler Login Usage Documentation 🗃️ Hauler Store Usage Documentation for Hauler Store 📄️ Hauler Completion Hauler Completion Usage Documentation 📄️ Hauler Version Hauler Version Usage Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Hauler Completion","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Completion","url":"/docs/next/hauler-usage/completion#overview","content":" hauler completion generate auto-completion scripts for various shells.  ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion","url":"/docs/next/hauler-usage/completion#command-overview","content":" Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Add File","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/add/file","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/next/hauler-usage/store/add/file#overview","content":" hauler store add file adds a file to the store.  An example with available flags...  hauler store add file &lt;file&gt; --name &lt;name&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/next/hauler-usage/store/add/file#command-overview","content":" Usage: hauler store add file [flags] Examples: # fetch local file hauler store add file file.txt # fetch remote file hauler store add file https://get.rke2.io/install.sh # fetch remote file and assign new name hauler store add file https://get.hauler.dev --name hauler-install.sh Flags: -h, --help help for file -n, --name string (Optional) Rewrite the name of the file Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Commands for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/next/hauler-usage/store/add/file#example-commands-for-files","content":" # fetch local file hauler store add file file.txt # fetch remote file hauler store add file https://get.rke2.io/install.sh # fetch remote file and assign new name hauler store add file https://get.hauler.dev --name hauler-install.sh   ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Manifest for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/next/hauler-usage/store/add/file#hauler-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: &lt;file&gt; name: &lt;name&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/next/hauler-usage/store/add/file#example-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Copy","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/copy","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Copy","url":"/docs/next/hauler-usage/store/copy#overview","content":" hauler store copy copies all store content to another location.  An example with available flags...  hauler store copy registry://&lt;registry-url&gt; hauler store copy dir://&lt;directory-path&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Copy","url":"/docs/next/hauler-usage/store/copy#command-overview","content":" Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure (Optional) Allow insecure connections -p, --password string (Optional) Password to use for authentication --plain-http (Optional) Allow plain HTTP connections -u, --username string (Optional) Username to use for authentication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Add Chart","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/add/chart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/next/hauler-usage/store/add/chart#overview","content":" hauler store add chart adds a helm chart to the store.  An example with available flags...  hauler store add chart &lt;chart-name&gt; --repo &lt;chart-repository&gt; --version &lt;chart version&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/next/hauler-usage/store/add/chart#command-overview","content":" Usage: hauler store add chart [flags] Examples: # fetch local helm chart hauler store add chart path/to/chart/directory # fetch local compressed helm chart hauler store add chart path/to/chart.tar.gz # fetch remote oci helm chart hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev # fetch remote oci helm chart with version hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev --version 1.0.6 # fetch remote helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch remote helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/latest --version 2.9.1 Flags: --ca-file string (Optional) Location of CA Bundle to enable certification verification --cert-file string (Optional) Location of the TLS Certificate to use for client authenication -h, --help help for chart --insecure-skip-tls-verify (Optional) Skip TLS certificate verification --key-file string (Optional) Location of the TLS Key to use for client authenication --password string (Optional) Password to use for authentication --repo string Location of the chart (https:// | http:// | oci://) --username string (Optional) Username to use for authentication --verify (Optional) Verify the chart before fetching it --version string (Optional) Specifiy the version of the chart (v1.0.0 | 2.0.0 | ^2.0.0) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Commands for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/next/hauler-usage/store/add/chart#example-commands-for-charts","content":" # fetch local helm chart hauler store add chart path/to/chart/directory --repo . # fetch local compressed helm chart hauler store add chart path/to/chart.tar.gz --repo . # fetch remote oci helm chart hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev # fetch remote oci helm chart with version hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev --version 1.0.6 # fetch remote helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch remote helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/latest --version 2.9.1   ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Manifest for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/next/hauler-usage/store/add/chart#hauler-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: &lt;chart-name&gt; # https:// or http:// or oci:// repoURL: &lt;chart-repository&gt; # semver complaint version: &lt;chart-version&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/next/hauler-usage/store/add/chart#example-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher-cluster-templates repoURL: oci://ghcr.io/rancherfederal/charts version: 0.5.2  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Add Image","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/add/image","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#overview","content":" hauler store add image adds a image to the store.  An example with available flags...  hauler store add image &lt;image-reference&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#command-overview","content":" Usage: hauler store add image [flags] Examples: # fetch image hauler store add image busybox # fetch image with repository and tag hauler store add image library/busybox:stable # fetch image with full image reference and specific platform hauler store add image ghcr.io/hauler-dev/hauler-debug:v1.0.7 --platform linux/amd74 # fetch image with full image reference via digest hauler store add image gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 # fetch image with full image reference, specific platform, and signature verification hauler store add image rgcrprod.azurecr.us/hauler/rke2-manifest.yaml:v1.28.12-rke2r1 --platform linux/amd64 --key carbide-key.pub Flags: -h, --help help for image -k, --key string (Optional) Location of public key to use for signature verification -p, --platform string (Optional) Specifiy the platform of the image... i.e. linux/amd64 (defaults to all) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Command Line for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#hauler-command-line-for-images","content":" hauler store add image &lt;image-reference&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Commands for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#example-commands-for-images","content":" # fetch image hauler store add image busybox # fetch image with repository and tag hauler store add image library/busybox:stable # fetch image with full image reference and specific platform hauler store add image ghcr.io/hauler-dev/hauler-debug:v1.0.7 --platform linux/amd74 # fetch image with full image reference via digest hauler store add image gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 # fetch image with full image reference, specific platform, and signature verification hauler store add image rgcrprod.azurecr.us/hauler/rke2-manifest.yaml:v1.28.12-rke2r1 --platform linux/amd64 --key carbide-key.pub   ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Manifest for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#hauler-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: - name: &lt;image-reference&gt; key: &lt;cosign-public-key&gt; platform: &lt;platform&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/next/hauler-usage/store/add/image#example-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Extract","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/extract","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Extract","url":"/docs/next/hauler-usage/store/extract#overview","content":" hauler store extract extracts artifacts from the store to disk.  An example with available flags...  hauler store extract &lt;artifact-name&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Extract","url":"/docs/next/hauler-usage/store/extract#command-overview","content":" Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string (Optional) Specify the directory to output (defaults to current directory) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Load","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/load","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Load","url":"/docs/next/hauler-usage/store/load#overview","content":" hauler store load loads a content store from a store archive.  An example with available flags...  hauler store load &lt;haul-name&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Load","url":"/docs/next/hauler-usage/store/load#command-overview","content":" Usage: hauler store load [flags] Flags: -h, --help help for load -t, --tempdir string (Optional) Override the default temporary directiory determined by the OS Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/overview","content":"Overview 📄️ Overview Usage Documentation for Hauler Store 🗃️ Add Usage Documentation for Hauler Store Add 📄️ Copy Hauler Store Copy Usage Documentation 📄️ Extract Hauler Store Extract Usage Documentation 📄️ Load Hauler Store Load Usage Documentation 📄️ Save Hauler Store Save Usage Documentation 🗃️ Serve Usage Documentation for Hauler Store Serve 📄️ Sync Hauler Store Sync Usage Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Hauler Store Serve Fileserver","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/serve/fileserver","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/next/hauler-usage/store/serve/fileserver#overview","content":" hauler store serve fileserver serves the fileserver.  An example with available flags...  hauler store serve fileserver --port &lt;port&gt; --timeout &lt;timeout&gt; --tls-cert &lt;cert&gt; --tls-key &lt;key&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/next/hauler-usage/store/serve/fileserver#command-overview","content":" Usage: hauler store serve fileserver [flags] Flags: --directory string (Optional) Directory to use for backend. Defaults to $PWD/fileserver (default &quot;fileserver&quot;) -h, --help help for fileserver -p, --port int (Optional) Specify the port to use for incoming connections (default 8080) -t, --timeout int (Optional) Timeout duration for HTTP Requests in seconds for both reads/writes (default 60) --tls-cert string (Optional) Location of the TLS Certificate to use for server authenication --tls-key string (Optional) Location of the TLS Key to use for server authenication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Commands for the Hauler Fileserver​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/next/hauler-usage/store/serve/fileserver#example-commands-for-the-hauler-fileserver","content":" # serve fileserver hauler store serve fileserver # serve fileserver on specific port hauler store serve fileserver --port &lt;port&gt;  ","version":"Next 🚧","tagName":"h2"},{"title":"Hauler Store Save","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/save","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Save","url":"/docs/next/hauler-usage/store/save#overview","content":" hauler store save saves a content store to a store archive.  An example with available flags...  hauler store save --filename &lt;file-name-with-extension&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Save","url":"/docs/next/hauler-usage/store/save#command-overview","content":" Usage: hauler store save [flags] Flags: -f, --filename string (Optional) Specify the name of outputted archive (default &quot;haul.tar.zst&quot;) -h, --help help for save -p, --platform string (Optional) Specify the platform for runtime imports... i.e. linux/amd64 (unspecified implies all) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Store Sync","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/sync","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Sync","url":"/docs/next/hauler-usage/store/sync#overview","content":" hauler store sync syncs content to the content store.  An example with available flags...  hauler store sync --files &lt;file-name&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt; --registry &lt;registry-url&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Sync","url":"/docs/next/hauler-usage/store/sync#command-overview","content":" Usage: hauler store sync [flags] Flags: -f, --files strings Location of content manifests (files)... i.e. --files ./rke2-files.yaml -h, --help help for sync -k, --key string (Optional) Location of public key to use for signature verification -p, --platform string (Optional) Specify the platform of the image... i.e linux/amd64 (defaults to all) -c, --product-registry string (Optional) Specify the product registry. Defaults to RGS Carbide Registry (rgcrprod.azurecr.us) --products strings (Optional) Specify the product name to fetch collections from the product registry i.e. rancher=v2.9.2,rke2=v1.29.9+rke2r1 -r, --registry string (Optional) Specify the registry of the image for images that do not alredy define one Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"Next 🚧","tagName":"h3"},{"title":"Hauler Version","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Version","url":"/docs/next/hauler-usage/version#overview","content":" hauler version prints the current version of hauler.  ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version","url":"/docs/next/hauler-usage/version#command-overview","content":" Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Outputs​","type":1,"pageTitle":"Hauler Version","url":"/docs/next/hauler-usage/version#example-outputs","content":"  __ __ ___ __ __ __ _______ .______ | | | | / \\ | | | | | | | ____|| _ \\ | |__| | / ^ \\ | | | | | | | |__ | |_) | | __ | / /_\\ \\ | | | | | | | __| | / | | | | / _____ \\ | `--' | | `----.| |____ | |\\ \\----. |__| |__| /__/ \\__\\ \\______/ |_______||_______|| _| `._____| hauler: Airgap Swiss Army Knife GitVersion: 1.1.0 GitCommit: 3406d54 GitTreeState: clean BuildDate: 2024-10-04T22:33:32Z GoVersion: go1.23.2 X:boringcrypto Compiler: gc Platform: linux/amd64   { &quot;gitVersion&quot;: &quot;1.1.0&quot;, &quot;gitCommit&quot;: &quot;3406d54&quot;, &quot;gitTreeState&quot;: &quot;clean&quot;, &quot;buildDate&quot;: &quot;2024-10-04T22:33:32Z&quot;, &quot;goVersion&quot;: &quot;go1.23.2 X:boringcrypto&quot;, &quot;compiler&quot;: &quot;gc&quot;, &quot;platform&quot;: &quot;linux/amd64&quot; }  ","version":"Next 🚧","tagName":"h3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/next/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/next/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring operators to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow operators to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows operators to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"Next 🚧","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/next/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  oras clicosigngo-containerregistry ","version":"Next 🚧","tagName":"h2"},{"title":"Hauler Store Serve Registry","type":0,"sectionRef":"#","url":"/docs/next/hauler-usage/store/serve/registry","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/next/hauler-usage/store/serve/registry#overview","content":" hauler store serve registry serves the OCI Compliant registry.  An example with available flags...  hauler store serve fileserver --port &lt;port&gt; --timeout &lt;timeout&gt; --readonly --tls-cert &lt;cert&gt; --tls-key &lt;key&gt;   ","version":"Next 🚧","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/next/hauler-usage/store/serve/registry#command-overview","content":" Usage: hauler store serve registry [flags] Flags: -c, --config string (Optional) Location of config file (overrides all flags) --directory string (Optional) Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int (Optional) Specify the port to use for incoming connections (default 5000) --readonly (Optional) Run the registry as readonly (default true) --tls-cert string (Optional) Location of the TLS Certificate to use for server authenication --tls-key string (Optional) Location of the TLS Key to use for server authenication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"Next 🚧","tagName":"h3"},{"title":"Example Commands for the Hauler Registry​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/next/hauler-usage/store/serve/registry#example-commands-for-the-hauler-registry","content":" # serve registry hauler store serve registry # serve registry on specific port hauler store serve registry --port &lt;port&gt; # serve registry on specific port with custom config hauler store serve registry --port &lt;port&gt; --config &lt;path-to-config&gt; # serve registry in writeable mode hauler store serve registry --readonly=false   ","version":"Next 🚧","tagName":"h2"},{"title":"Example Config for the Hauler Registry​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/next/hauler-usage/store/serve/registry#example-config-for-the-hauler-registry","content":" These are all configuration options for the registry. Some options in the list are mutually exclusive. Read the detailed reference information about each option before finalizing your configuration.  You can learn more here --&gt; https://distribution.github.io/distribution/about/configuration  version: 0.1 log: accesslog: disabled: true level: debug formatter: text fields: service: registry environment: staging hooks: - type: mail disabled: true levels: - panic options: smtp: addr: mail.example.com:25 username: mailuser password: password insecure: true from: sender@example.com to: - errors@example.com loglevel: debug # deprecated: use &quot;log&quot; storage: filesystem: rootdirectory: /var/lib/registry maxthreads: 100 azure: accountname: accountname accountkey: base64encodedaccountkey container: containername rootdirectory: /az/object/name/prefix credentials: type: client_secret clientid: client_id_string tenantid: tenant_id_string secret: secret_string copy_status_poll_max_retry: 10 copy_status_poll_delay: 100ms gcs: bucket: bucketname keyfile: /path/to/keyfile credentials: type: service_account project_id: project_id_string private_key_id: private_key_id_string private_key: private_key_string client_email: client@example.com client_id: client_id_string auth_uri: http://example.com/auth_uri token_uri: http://example.com/token_uri auth_provider_x509_cert_url: http://example.com/provider_cert_url client_x509_cert_url: http://example.com/client_cert_url rootdirectory: /gcs/object/name/prefix chunksize: 5242880 s3: accesskey: awsaccesskey secretkey: awssecretkey region: us-west-1 regionendpoint: http://myobjects.local forcepathstyle: true accelerate: false bucket: bucketname encrypt: true keyid: mykeyid secure: true v4auth: true chunksize: 5242880 multipartcopychunksize: 33554432 multipartcopymaxconcurrency: 100 multipartcopythresholdsize: 33554432 rootdirectory: /s3/object/name/prefix usedualstack: false loglevel: debug inmemory: # This driver takes no parameters tag: concurrencylimit: 8 delete: enabled: false redirect: disable: false cache: blobdescriptor: redis blobdescriptorsize: 10000 maintenance: uploadpurging: enabled: true age: 168h interval: 24h dryrun: false readonly: enabled: false auth: silly: realm: silly-realm service: silly-service token: autoredirect: true realm: token-realm service: token-service issuer: registry-token-issuer rootcertbundle: /root/certs/bundle htpasswd: realm: basic-realm path: /path/to/htpasswd middleware: registry: - name: ARegistryMiddleware options: foo: bar repository: - name: ARepositoryMiddleware options: foo: bar storage: - name: cloudfront options: baseurl: https://my.cloudfronted.domain.com/ privatekey: /path/to/pem keypairid: cloudfrontkeypairid duration: 3000s ipfilteredby: awsregion awsregion: us-east-1, use-east-2 updatefrequency: 12h iprangesurl: https://ip-ranges.amazonaws.com/ip-ranges.json storage: - name: redirect options: baseurl: https://example.com/ http: addr: localhost:5000 prefix: /my/nested/registry/ host: https://myregistryaddress.org:5000 secret: asecretforlocaldevelopment relativeurls: false draintimeout: 60s tls: certificate: /path/to/x509/public key: /path/to/x509/private clientcas: - /path/to/ca.pem - /path/to/another/ca.pem letsencrypt: cachefile: /path/to/cache-file email: emailused@letsencrypt.com hosts: [myregistryaddress.org] directoryurl: https://acme-v02.api.letsencrypt.org/directory debug: addr: localhost:5001 prometheus: enabled: true path: /metrics headers: X-Content-Type-Options: [nosniff] http2: disabled: false h2c: enabled: false notifications: events: includereferences: true endpoints: - name: alistener disabled: false url: https://my.listener.com/event headers: &lt;http.Header&gt; timeout: 1s threshold: 10 backoff: 1s ignoredmediatypes: - application/octet-stream ignore: mediatypes: - application/octet-stream actions: - pull redis: addr: localhost:6379 password: asecret db: 0 dialtimeout: 10ms readtimeout: 10ms writetimeout: 10ms pool: maxidle: 16 maxactive: 64 idletimeout: 300s tls: enabled: false health: storagedriver: enabled: true interval: 10s threshold: 3 file: - file: /path/to/checked/file interval: 10s http: - uri: http://server.to.check/must/return/200 headers: Authorization: [Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==] statuscode: 200 timeout: 3s interval: 10s threshold: 3 tcp: - addr: redis-server.domain.com:6379 timeout: 3s interval: 10s threshold: 3 proxy: remoteurl: https://registry-1.docker.io username: [username] password: [password] ttl: 168h validation: manifests: urls: allow: - ^https?://([^/]+\\.)*example\\.com/ deny: - ^https?://www\\.example\\.com/  ","version":"Next 🚧","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/next/introduction/uninstall","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#uninstallation-steps","content":" ","version":"Next 🚧","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#linuxdarwin","content":" # uninstall hauler curl -sfL https://get.hauler.dev | HAULER_UNINSTALL=true bash   ","version":"Next 🚧","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#homebrew","content":" # installs latest release brew uninstall hauler   ","version":"Next 🚧","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#windows","content":" # coming soon   ","version":"Next 🚧","tagName":"h3"},{"title":"Manual Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#manual-uninstallation-steps","content":" ","version":"Next 🚧","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#linuxdarwin-1","content":" # remove the hauler binary sudo rm -f /usr/local/bin/hauler # remove the working/installation directory rm -rf &quot;$HOME/.hauler&quot;   ","version":"Next 🚧","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#homebrew-1","content":" # not applicable   ","version":"Next 🚧","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/next/introduction/uninstall#windows-1","content":" # coming soon  ","version":"Next 🚧","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/next/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no prerequistes, depedencies, or runtime environment. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"Next 🚧","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"Next 🚧","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#installation-steps","content":" ","version":"Next 🚧","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=1.1.0 bash # install at different directory curl -sfL https://get.hauler.dev | HAULER_INSTALL_DIR=/usr/bin bash # install with debug mode curl -sfL https://get.hauler.dev | HAULER_DEBUG=true bash   ","version":"Next 🚧","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#homebrew","content":" # install latest release brew tap hauler-dev/homebrew-tap brew install hauler # install specific release brew tap hauler-dev/homebrew-tap brew install hauler@1.1.0   ","version":"Next 🚧","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#windows","content":" # coming soon   ","version":"Next 🚧","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#manual-installation-steps","content":" ","version":"Next 🚧","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#linuxdarwin-1","content":" # set the hauler version (i.e. HAULER_VERSION=1.1.0) export vHauler=HAULER_VERSION # set the specific platform (i.e. PLATFORM=linux) export platform=PLATFORM # set the specific arch (i.e. ARCH=amd64) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler   ","version":"Next 🚧","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#homebrew-1","content":" # not applicable   ","version":"Next 🚧","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/next/introduction/install#windows-1","content":" # coming soon  ","version":"Next 🚧","tagName":"h3"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/next/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/next/known-limits#issues","content":" No Issues at this time.  ","version":"Next 🚧","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/next/known-limits#limitations","content":" When using a store for hauler that has the same name of a helm chart, hauler will fail to fetch the chart. For example, if you tried to use a store name of rancher with a helm chart name rancher, the fetch will fail due to the fact that helm defaults to using an exisiting local directory, if it matches the name of the chart.https://github.com/helm/helm/blob/e81f6140ddb22bc99a08f7409522a8dbe5338ee3/pkg/action/install.go#L714-L815 When using hauler, it will default to write temporary files to /tmp. If you do not have about 3x the amount of space available in your /tmp compared to the size of the store or the haul, then hauler may fail.  ","version":"Next 🚧","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/next/known-limits#notices","content":" No Notices at this time. ","version":"Next 🚧","tagName":"h2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/next/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"Next 🚧"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"Next 🚧","tagName":"h2"},{"title":"Getting Started with Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#getting-started-with-hauler","content":" ","version":"Next 🚧","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line: # add a image... defaults to docker.io hauler store add image neuvector/scanner:latest # add a image with a specific platform and with supply chain artifacts # may not work for all users due to the specified registry hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.7.1 --platform linux/amd64 --key carbide-key.pub # add a helm chart with a specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.9.2 # add a file and assign it a new name hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest: # fetch the content via a declarative manifest hauler store sync --files hauler-manifest.yaml hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: busybox - name: busybox:stable platform: linux/amd64 - name: gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.9.2 - name: hauler-helm repoURL: oci://ghcr.io/hauler-dev --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh - path: hauler-manifest.yaml   ","version":"Next 🚧","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"Next 🚧","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst         ","version":"Next 🚧","tagName":"h3"},{"title":"Airgap the haul.tar.zst (aka the \"haul\")​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#airgap-the-haultarzst-aka-the-haul","content":" For this quickstart and example use of hauler, we can simulate airgapping to the disconnected environment by deleting the &quot;store&quot; directory with the following command: rm -rf store        ","version":"Next 🚧","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"Next 🚧","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a readonly registry from the hauler store # defaults to &lt;FQDN or IP&gt;:5000 hauler store serve registry # serve the file content as a fileserver from the hauler store # defaults to &lt;FQDN or IP&gt;:8080 hauler store serve fileserver   ","version":"Next 🚧","tagName":"h3"},{"title":"Copy the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#copy-the-hauler-store","content":" # copy the content to a registry from the hauler store # copies oci compliant artifacts hauler store copy registry://registry.example.com # copy the content to a directory from the hauler store # copies non oci compliant artifacts hauler store copy dir://hauler-files   ","version":"Next 🚧","tagName":"h3"},{"title":"Extract Content from the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/next/introduction/quickstart#extract-content-from-the-hauler-store","content":" # extracts artifacts from the hauler store to disk hauler store extract hauler/rancher:2.9.2  ","version":"Next 🚧","tagName":"h3"},{"title":"Bootstrapping Utilities","type":0,"sectionRef":"#","url":"/docs/guides-references/bootstraping-utilities","content":"Bootstrapping Utilities Bootstrapping Utilities documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/docs/feedback","content":"Feedback Feedback is critical to us to continue to improve Hauler and accelerate your mission. For any issues, concerns, or questions, please open an issue: https://github.com/hauler-dev/hauler/issues","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Core Concepts","type":0,"sectionRef":"#","url":"/docs/core-concepts","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Haul​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#haul","content":" SUMMARY: Hauls are Compressed Archive (Tarball) of Hauler Collections and Content.  At the heart of Hauler lies the concept of a Haul. A Haul is a compressed archive, often in the form of a tarball, containing Hauler collections and content. It serves as a container for grouping and transporting various data types, making it a fundamental element in the Hauler ecosystem.  ","version":"1.1.x","tagName":"h2"},{"title":"Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#collections","content":" SUMMARY: Collections are Grouping of one or more Hauler Contents.  Collections are the building blocks of Hauler. These are groupings of one or more Hauler contents. Think of collections as organized sets of data that collectively represent something desirable.  ","version":"1.1.x","tagName":"h2"},{"title":"Community Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#community-collections","content":" While collections (and contents) are built into Hauler, our goal is to empower operators to define their own collections. This way, you can tailor Hauler to your unique requirements and take full control of your artifacts.  ","version":"1.1.x","tagName":"h3"},{"title":"RGS Carbide Collections​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#rgs-carbide-collections","content":" Hauler provides the ability to import collections for the Rancher products, making it seamless for RGS Supported Customers to airgap any of the Rancher products or projects. If you haven't heard of Rancher Government Carbide, check it out here!  ","version":"1.1.x","tagName":"h3"},{"title":"Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#content","content":" SUMMARY: Contents are Artifacts such as Images, Charts, or Files.  In Hauler's terminology, content refers to artifacts such as container images, helm charts, or files. These are the fundamental types of artifacts for Hauler. To understand it a little bit better, let's break it down:  Content: The fundamental type of artifacts that Hauler recognizes (images, charts, and files).Artifact: Anything that can be represented as an OCI (Open Container Initiative) Compliant Artifact. OCI Compliant Artifacts provide a standardized way to store arbitrary files, making it easier to manage content efficiently.  ","version":"1.1.x","tagName":"h2"},{"title":"Declarative Content​","type":1,"pageTitle":"Core Concepts","url":"/docs/core-concepts#declarative-content","content":" While manually adding content to Hauler is an easy way to get started, there is a more sustainable approach... Hauler provides a declarative and programmatic approach by allowing operators to define content within a configuration file, known as a manifest. This approach ensures a more reproducable workflow for managing the lifecycle of your hauls. Check it out here! ","version":"1.1.x","tagName":"h3"},{"title":"Airgap Workflow","type":0,"sectionRef":"#","url":"/docs/airgap-workflow","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Workflow Diagram​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/airgap-workflow#workflow-diagram","content":"   ","version":"1.1.x","tagName":"h2"},{"title":"What's an Airgap?​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/airgap-workflow#whats-an-airgap","content":" An airgap is a highly secure environment that is physically isolated from external connectivity (usually the internet), ensuring complete isolation from other environments by preventing unauthorized access or data transfers.  ","version":"1.1.x","tagName":"h2"},{"title":"Example Use Cases​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/airgap-workflow#example-use-cases","content":" Government and Military: These airgaps protect sensitive government and military information and critical defense infrastructure, ensuring that classified data remains secure and inaccessible to unauthorized entities.Critical Infrastructure: These airgaps secure power grids, water supply systems, and transportation networks from cyber threats, shielding them from potential disruptions and ensuring their continuous operation.Financial Institutions: These airgaps safeguard financial transactions and customer data from cyberattacks, maintaining the trust and integrity of financial systems.Research Facilities: These airgaps protect valuable research data, intellectual property, and proprietary information, preserving the integrity and confidentiality of research efforts.  ","version":"1.1.x","tagName":"h3"},{"title":"Challenges of an Airgap​","type":1,"pageTitle":"Airgap Workflow","url":"/docs/airgap-workflow#challenges-of-an-airgap","content":" Data Transfers: Transferring data in and out of an airgapped system is complex due to the lack of network connectivity, often necessitating the use of physical media, trusted intermediaries, and meticulous approval processes to ensure data security.Usability vs. Security Balance: Balancing security with usability in airgapped environments can be intricate, as the limited convenience poses challenges for user interactions and system operations.Maintenance Complexity: Regular system updates, package and dependency updates, and overall maintenance can be challenging in airgapped systems, as the limited network connectivity complicates the process, requiring meticulous planning and execution.Costly Implementation: Implementing and maintaining airgapped systems can be costly, demanding specialized workflows, protocols, and security measures to uphold the system's integrity and security. ","version":"1.1.x","tagName":"h2"},{"title":"RGS Carbide Customers","type":0,"sectionRef":"#","url":"/docs/guides-references/carbide-customers","content":"RGS Carbide Customers For all supported customers of Rancher Government, under the umbrella of Rancher Government Carbide, there is included addon functionality within Hauler. Hauler has the the ability to reference Collections from various registeries, including the Carbide Secured Registry (CSR). To better understand this workflow, Hauler is built to allow operators to fetch, store, package, and distribute various artifacts, but most operators may be unsure of what to fetch, store, package, and distribute, and that is where our supported customers are able to leverage predefined manifests, known as Collections, via the --products flag, through the Carbide Secured Registry (CSR), for all of Rancher Government products and solutions. Please see the Carbide Documentation for easily fetching, packing, and distributing Carbide with the hauler store sync --products &lt;product&gt;=&lt;product-version&gt;. Please know that we are actively working to improve this workflow and your feedback is appreciated! Carbide Docs for Connected EnvironmentsCarbide Docs for Disconnected Environments","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Container Runtimes Integrations","type":0,"sectionRef":"#","url":"/docs/guides-references/container-runtimes","content":"Container Runtimes Integrations Container Runtimes Integrations documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Hauler Collections","type":0,"sectionRef":"#","url":"/docs/guides-references/hauler-collections","content":"Hauler Collections Hauler Collections and Community Collections documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/guides-references/overview","content":"Overview 📄️ Overview Reference Guides Overview Documentation for Hauler 📄️ Fetch Cluster Images Fetching Images on a Cluster Documentation 📄️ RGS Carbide Customers RGS Carbide Customers Documentation 📄️ Container Runtimes Integrations Container Runtimes Integrations Documentation 📄️ Bootstrapping Utilities Bootstrapping Utilities Documentation 📄️ Hauler Manifests Hauler Manifests Documentation 📄️ Hauler Content Hauler Content Documentation 📄️ Hauler Collections Hauler Collections Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Fetching Cluster Images","type":0,"sectionRef":"#","url":"/docs/guides-references/cluster-images","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Fetch Cluster Images​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/guides-references/cluster-images#fetch-cluster-images","content":" # fetch all images in the cluster, remove duplicates, alphabetize, and put on a newline export IMAGE_LIST=$(kubectl get pods --all-namespaces -o jsonpath=&quot;{.items[*].spec.containers[*].image}&quot; | sed 's/ /\\n/g' | sort | uniq)   ","version":"1.1.x","tagName":"h2"},{"title":"Example Output​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/guides-references/cluster-images#example-output","content":" # view the list of images from the cluster echo $IMAGE_LIST index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 rancher/hardened-calico:v3.21.4-build20220228 rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 rancher/hardened-coredns:v1.9.1-build20220318 rancher/hardened-flannel:v0.17.0-build20220317 rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 rancher/klipper-helm:v0.7.0-build20220315 rancher/nginx-ingress-controller:nginx-1.0.2-hardened4   ","version":"1.1.x","tagName":"h2"},{"title":"Generate Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/guides-references/cluster-images#generate-hauler-manifest","content":" # add the required formatting for the image list export IMAGE_LIST_MODIFIED=$(echo &quot;${IMAGE_LIST}&quot; | sed 's/^/ - name: /') # create the hauler manifest with the updated image list cat &lt;&lt; EOF &gt;&gt; hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: $IMAGE_LIST_MODIFIED EOF   ","version":"1.1.x","tagName":"h2"},{"title":"Resulting Hauler Manifest​","type":1,"pageTitle":"Fetching Cluster Images","url":"/docs/guides-references/cluster-images#resulting-hauler-manifest","content":" hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-cluster-images spec: images: - name: index.docker.io/rancher/hardened-etcd:v3.5.1-k3s1-build20220112 - name: index.docker.io/rancher/hardened-kubernetes:v1.23.5-rke2r1-build20220316 - name: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118 - name: rancher/hardened-calico:v3.21.4-build20220228 - name: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119 - name: rancher/hardened-coredns:v1.9.1-build20220318 - name: rancher/hardened-flannel:v0.17.0-build20220317 - name: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119 - name: rancher/klipper-helm:v0.7.0-build20220315 - name: rancher/nginx-ingress-controller:nginx-1.0.2-hardened4  ","version":"1.1.x","tagName":"h2"},{"title":"Hauler Content","type":0,"sectionRef":"#","url":"/docs/guides-references/hauler-content","content":"Hauler Content Hauler Content documentation are pending a future release!","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Hauler Manifests","type":0,"sectionRef":"#","url":"/docs/guides-references/hauler-manifests","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/guides-references/hauler-manifests#example-manifest-for-images","content":" Please review the Hauler Content Pages for Images for more detailed information.  hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64   ","version":"1.1.x","tagName":"h2"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/guides-references/hauler-manifests#example-manifest-for-charts","content":" Please review the Hauler Content Pages for Charts for more detailed information.  hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher-cluster-templates repoURL: oci://ghcr.io/rancherfederal/charts version: 0.5.2   ","version":"1.1.x","tagName":"h2"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Manifests","url":"/docs/guides-references/hauler-manifests#example-manifest-for-files","content":" Please review the Hauler Content Pages for Files for more detailed information.  hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.1.x","tagName":"h2"},{"title":"Hauler Help","type":0,"sectionRef":"#","url":"/docs/hauler-usage/help","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Help","url":"/docs/hauler-usage/help#command-overview","content":" Usage: hauler [flags] hauler [command] Available Commands: completion Generate auto-completion scripts for various shells help Help about any command login Login to a registry store Interact with the content store version Print the current version Flags: -h, --help help for hauler -l, --log-level string (default &quot;info&quot;) Use &quot;hauler [command] --help&quot; for more information about a command.  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Login","type":0,"sectionRef":"#","url":"/docs/hauler-usage/login","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Login","url":"/docs/hauler-usage/login#overview","content":" hauler login logs into an OCI Compliant registry that is stored at ~/.docker/config.json.  An example with available flags...  hauler login &lt;registry-url&gt; --username &lt;username&gt; --password &lt;password&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Login","url":"/docs/hauler-usage/login#command-overview","content":" Usage: hauler login [flags] Examples: # Log into registry.example.com hauler login registry.example.com -u bob -p haulin Flags: -h, --help help for login -p, --password string (Optional) Password to use for authentication --password-stdin (Optional) Password to use for authentication (from stdin) -u, --username string (Optional) Username to use for authentication Global Flags: -l, --log-level string (default &quot;info&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/hauler-usage/overview","content":"Overview 📄️ Overview Usage Documentation for Hauler 📄️ Hauler Help Hauler Usage Documentation 📄️ Hauler Login Hauler Login Usage Documentation 🗃️ Hauler Store Usage Documentation for Hauler Store 📄️ Hauler Completion Hauler Completion Usage Documentation 📄️ Hauler Version Hauler Version Usage Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Hauler Completion","type":0,"sectionRef":"#","url":"/docs/hauler-usage/completion","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Completion","url":"/docs/hauler-usage/completion#overview","content":" hauler completion generate auto-completion scripts for various shells.  ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Completion","url":"/docs/hauler-usage/completion#command-overview","content":" Usage: hauler completion [command] Available Commands: bash Generates bash completion scripts fish Generates fish completion scripts powershell Generates powershell completion scripts zsh Generates zsh completion scripts Flags: -h, --help help for completion Global Flags: -l, --log-level string (default &quot;info&quot;) Use &quot;hauler completion [command] --help&quot; for more information about a command.   hauler completion bash:​  Generate the autocompletion script for the bash shell. Note: This script depends on the 'bash-completion' package.  To load completions in your current shell session: source &lt;(hauler completion bash) To load completions for every new session, execute once: #### Linux: hauler completion bash &gt; /etc/bash_completion.d/hauler #### macOS: hauler completion bash &gt; $(brew --prefix)/etc/bash_completion.d/hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion bash Flags: -h, --help help for bash --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion fish:​  Generate the autocompletion script for the fish shell.  To load completions in your current shell session: hauler completion fish | source To load completions for every new session, execute once: hauler completion fish &gt; ~/.config/fish/completions/hauler.fish You will need to start a new shell for this setup to take effect. Usage: hauler completion fish [flags] Flags: -h, --help help for fish --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion powershell:​  Generate the autocompletion script for powershell.  To load completions in your current shell session: hauler completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. Usage: hauler completion powershell [flags] Flags: -h, --help help for powershell --no-descriptions disable completion descriptions Global Flags: -l, --log-level string (default &quot;info&quot;)   hauler completion zsh:​  Generate the autocompletion script for the zsh shell. Note: If shell completion is not already enabled in your environment you will need to enable it.  To load completions in your current shell session: source &lt;(hauler completion zsh) To load completions for every new session, execute once: #### Linux: hauler completion zsh &gt; &quot;${fpath[1]}/_hauler&quot; #### macOS: hauler completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_hauler You will need to start a new shell for this setup to take effect. Usage: hauler completion zsh [flags] Flags: -h, --help help for zsh --no-descriptions disable completion descriptions Global Flags:  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Add File","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/add/file","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/hauler-usage/store/add/file#overview","content":" hauler store add file adds a file to the store.  An example with available flags...  hauler store add file &lt;file&gt; --name &lt;name&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/hauler-usage/store/add/file#command-overview","content":" Usage: hauler store add file [flags] Examples: # fetch local file hauler store add file file.txt # fetch remote file hauler store add file https://get.rke2.io/install.sh # fetch remote file and assign new name hauler store add file https://get.hauler.dev --name hauler-install.sh Flags: -h, --help help for file -n, --name string (Optional) Rewrite the name of the file Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Example Commands for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/hauler-usage/store/add/file#example-commands-for-files","content":" # fetch local file hauler store add file file.txt # fetch remote file hauler store add file https://get.rke2.io/install.sh # fetch remote file and assign new name hauler store add file https://get.hauler.dev --name hauler-install.sh   ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Manifest for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/hauler-usage/store/add/file#hauler-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: &lt;file&gt; name: &lt;name&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Example Manifest for Files​","type":1,"pageTitle":"Hauler Store Add File","url":"/docs/hauler-usage/store/add/file#example-manifest-for-files","content":" hauler-file-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: # fetch remote file - path: https://get.rke2.io # fetch remote file and assign new name - path: https://get.rke2.io name: install.sh # fetch local file - path: path/to/local/file.txt # fetch local file and assign new name - path: path/to/local/file.txt name: local-file.txt  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Add Chart","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/add/chart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/hauler-usage/store/add/chart#overview","content":" hauler store add chart adds a helm chart to the store.  An example with available flags...  hauler store add chart &lt;chart-name&gt; --repo &lt;chart-repository&gt; --version &lt;chart version&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/hauler-usage/store/add/chart#command-overview","content":" Usage: hauler store add chart [flags] Examples: # fetch local helm chart hauler store add chart path/to/chart/directory # fetch local compressed helm chart hauler store add chart path/to/chart.tar.gz # fetch remote oci helm chart hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev # fetch remote oci helm chart with version hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev --version 1.0.6 # fetch remote helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch remote helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/latest --version 2.9.1 Flags: --ca-file string (Optional) Location of CA Bundle to enable certification verification --cert-file string (Optional) Location of the TLS Certificate to use for client authenication -h, --help help for chart --insecure-skip-tls-verify (Optional) Skip TLS certificate verification --key-file string (Optional) Location of the TLS Key to use for client authenication --password string (Optional) Password to use for authentication --repo string Location of the chart (https:// | http:// | oci://) --username string (Optional) Username to use for authentication --verify (Optional) Verify the chart before fetching it --version string (Optional) Specifiy the version of the chart (v1.0.0 | 2.0.0 | ^2.0.0) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Example Commands for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/hauler-usage/store/add/chart#example-commands-for-charts","content":" # fetch local helm chart hauler store add chart path/to/chart/directory --repo . # fetch local compressed helm chart hauler store add chart path/to/chart.tar.gz --repo . # fetch remote oci helm chart hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev # fetch remote oci helm chart with version hauler store add chart hauler-helm --repo oci://ghcr.io/hauler-dev --version 1.0.6 # fetch remote helm chart hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable # fetch remote helm chart with specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/latest --version 2.9.1   ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Manifest for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/hauler-usage/store/add/chart#hauler-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: &lt;chart-name&gt; # https:// or http:// or oci:// repoURL: &lt;chart-repository&gt; # semver complaint version: &lt;chart-version&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Example Manifest for Charts​","type":1,"pageTitle":"Hauler Store Add Chart","url":"/docs/hauler-usage/store/add/chart#example-manifest-for-charts","content":" hauler-chart-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: # fetch helm chart - name: rancher repoURL: https://releases.rancher.com/server-charts/stable # fetch helm chart with specific version - name: rancher-cluster-templates repoURL: oci://ghcr.io/rancherfederal/charts version: 0.5.2  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Copy","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/copy","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Copy","url":"/docs/hauler-usage/store/copy#overview","content":" hauler store copy copies all store content to another location.  An example with available flags...  hauler store copy registry://&lt;registry-url&gt; hauler store copy dir://&lt;directory-path&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Copy","url":"/docs/hauler-usage/store/copy#command-overview","content":" Usage: hauler store copy [flags] Flags: -h, --help help for copy --insecure (Optional) Allow insecure connections -p, --password string (Optional) Password to use for authentication --plain-http (Optional) Allow plain HTTP connections -u, --username string (Optional) Username to use for authentication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Extract","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/extract","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Extract","url":"/docs/hauler-usage/store/extract#overview","content":" hauler store extract extracts artifacts from the store to disk.  An example with available flags...  hauler store extract &lt;artifact-name&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Extract","url":"/docs/hauler-usage/store/extract#command-overview","content":" Usage: hauler store extract [flags] Aliases: extract, x Flags: -h, --help help for extract -o, --output string (Optional) Specify the directory to output (defaults to current directory) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Load","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/load","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Load","url":"/docs/hauler-usage/store/load#overview","content":" hauler store load loads a content store from a store archive.  An example with available flags...  hauler store load &lt;haul-name&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Load","url":"/docs/hauler-usage/store/load#command-overview","content":" Usage: hauler store load [flags] Flags: -h, --help help for load -t, --tempdir string (Optional) Override the default temporary directiory determined by the OS Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Add Image","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/add/image","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#overview","content":" hauler store add image adds a image to the store.  An example with available flags...  hauler store add image &lt;image-reference&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#command-overview","content":" Usage: hauler store add image [flags] Examples: # fetch image hauler store add image busybox # fetch image with repository and tag hauler store add image library/busybox:stable # fetch image with full image reference and specific platform hauler store add image ghcr.io/hauler-dev/hauler-debug:v1.0.7 --platform linux/amd74 # fetch image with full image reference via digest hauler store add image gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 # fetch image with full image reference, specific platform, and signature verification hauler store add image rgcrprod.azurecr.us/hauler/rke2-manifest.yaml:v1.28.12-rke2r1 --platform linux/amd64 --key carbide-key.pub Flags: -h, --help help for image -k, --key string (Optional) Location of public key to use for signature verification -p, --platform string (Optional) Specifiy the platform of the image... i.e. linux/amd64 (defaults to all) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Command Line for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#hauler-command-line-for-images","content":" hauler store add image &lt;image-reference&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Example Commands for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#example-commands-for-images","content":" # fetch image hauler store add image busybox # fetch image with repository and tag hauler store add image library/busybox:stable # fetch image with full image reference and specific platform hauler store add image ghcr.io/hauler-dev/hauler-debug:v1.0.7 --platform linux/amd74 # fetch image with full image reference via digest hauler store add image gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 # fetch image with full image reference, specific platform, and signature verification hauler store add image rgcrprod.azurecr.us/hauler/rke2-manifest.yaml:v1.28.12-rke2r1 --platform linux/amd64 --key carbide-key.pub   ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Manifest for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#hauler-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: - name: &lt;image-reference&gt; key: &lt;cosign-public-key&gt; platform: &lt;platform&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Example Manifest for Images​","type":1,"pageTitle":"Hauler Store Add Image","url":"/docs/hauler-usage/store/add/image#example-manifest-for-images","content":" hauler-image-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example annotations: # global flags for all images in the manifest # image flags override global flags # example: key set globally, but not observed if set per image # example: platform set globally, but not observed if set per image # example: registry set globally, but not observed if set per image hauler.dev/key: &lt;cosign-public-key&gt; hauler.dev/platform: &lt;platform&gt; hauler.dev/registry: &lt;registry&gt; spec: images: # fetch image - name: neuvector/scanner # fetch image with full image reference - name: docker.io/neuvector/updater:latest # fetch image with full image reference with digest - name: docker.io/neuvector/updater@sha256:0076b356368c9988eec5f3cead771d29a377074b982f22800f4d9c8c3b215a56 # fetch image with full image reference, specific version, specific platform - name: docker.io/longhornio/longhorn-ui:v1.6.0 platform: linux/amd64 # fetch image with full image reference, specific version, specific platform, and signature verification - name: docker.io/longhornio/longhorn-manager:v1.6.0 key: cosign-public-key.pub platform: linux/amd64  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Store Save","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/save","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Save","url":"/docs/hauler-usage/store/save#overview","content":" hauler store save saves a content store to a store archive.  An example with available flags...  hauler store save --filename &lt;file-name-with-extension&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Save","url":"/docs/hauler-usage/store/save#command-overview","content":" Usage: hauler store save [flags] Flags: -f, --filename string (Optional) Specify the name of outputted archive (default &quot;haul.tar.zst&quot;) -h, --help help for save -p, --platform string (Optional) Specify the platform for runtime imports... i.e. linux/amd64 (unspecified implies all) Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/overview","content":"Overview 📄️ Overview Usage Documentation for Hauler Store 🗃️ Add Usage Documentation for Hauler Store Add 📄️ Copy Hauler Store Copy Usage Documentation 📄️ Extract Hauler Store Extract Usage Documentation 📄️ Load Hauler Store Load Usage Documentation 📄️ Save Hauler Store Save Usage Documentation 🗃️ Serve Usage Documentation for Hauler Store Serve 📄️ Sync Hauler Store Sync Usage Documentation","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Hauler Store Serve Fileserver","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/serve/fileserver","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/hauler-usage/store/serve/fileserver#overview","content":" hauler store serve fileserver serves the fileserver.  An example with available flags...  hauler store serve fileserver --port &lt;port&gt; --timeout &lt;timeout&gt; --tls-cert &lt;cert&gt; --tls-key &lt;key&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/hauler-usage/store/serve/fileserver#command-overview","content":" Usage: hauler store serve fileserver [flags] Flags: --directory string (Optional) Directory to use for backend. Defaults to $PWD/fileserver (default &quot;fileserver&quot;) -h, --help help for fileserver -p, --port int (Optional) Specify the port to use for incoming connections (default 8080) -t, --timeout int (Optional) Timeout duration for HTTP Requests in seconds for both reads/writes (default 60) --tls-cert string (Optional) Location of the TLS Certificate to use for server authenication --tls-key string (Optional) Location of the TLS Key to use for server authenication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Example Commands for the Hauler Fileserver​","type":1,"pageTitle":"Hauler Store Serve Fileserver","url":"/docs/hauler-usage/store/serve/fileserver#example-commands-for-the-hauler-fileserver","content":" # serve fileserver hauler store serve fileserver # serve fileserver on specific port hauler store serve fileserver --port &lt;port&gt;  ","version":"1.1.x","tagName":"h2"},{"title":"Hauler Store Sync","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/sync","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Sync","url":"/docs/hauler-usage/store/sync#overview","content":" hauler store sync syncs content to the content store.  An example with available flags...  hauler store sync --files &lt;file-name&gt; --platform &lt;platform&gt; --key &lt;cosign-public-key&gt; --registry &lt;registry-url&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Sync","url":"/docs/hauler-usage/store/sync#command-overview","content":" Usage: hauler store sync [flags] Flags: -f, --files strings Location of content manifests (files)... i.e. --files ./rke2-files.yaml -h, --help help for sync -k, --key string (Optional) Location of public key to use for signature verification -p, --platform string (Optional) Specify the platform of the image... i.e linux/amd64 (defaults to all) -c, --product-registry string (Optional) Specify the product registry. Defaults to RGS Carbide Registry (rgcrprod.azurecr.us) --products strings (Optional) Specify the product name to fetch collections from the product registry i.e. rancher=v2.9.2,rke2=v1.29.9+rke2r1 -r, --registry string (Optional) Specify the registry of the image for images that do not alredy define one Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)  ","version":"1.1.x","tagName":"h3"},{"title":"Hauler Version","type":0,"sectionRef":"#","url":"/docs/hauler-usage/version","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Version","url":"/docs/hauler-usage/version#overview","content":" hauler version prints the current version of hauler.  ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Version","url":"/docs/hauler-usage/version#command-overview","content":" Usage: hauler version [flags] Aliases: version, v Flags: -h, --help help for version --json toggle output in JSON Global Flags: -l, --log-level string (default &quot;info&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Example Outputs​","type":1,"pageTitle":"Hauler Version","url":"/docs/hauler-usage/version#example-outputs","content":"  __ __ ___ __ __ __ _______ .______ | | | | / \\ | | | | | | | ____|| _ \\ | |__| | / ^ \\ | | | | | | | |__ | |_) | | __ | / /_\\ \\ | | | | | | | __| | / | | | | / _____ \\ | `--' | | `----.| |____ | |\\ \\----. |__| |__| /__/ \\__\\ \\______/ |_______||_______|| _| `._____| hauler: Airgap Swiss Army Knife GitVersion: 1.1.0 GitCommit: 3406d54 GitTreeState: clean BuildDate: 2024-10-04T22:33:32Z GoVersion: go1.23.2 X:boringcrypto Compiler: gc Platform: linux/amd64   { &quot;gitVersion&quot;: &quot;1.1.0&quot;, &quot;gitCommit&quot;: &quot;3406d54&quot;, &quot;gitTreeState&quot;: &quot;clean&quot;, &quot;buildDate&quot;: &quot;2024-10-04T22:33:32Z&quot;, &quot;goVersion&quot;: &quot;go1.23.2 X:boringcrypto&quot;, &quot;compiler&quot;: &quot;gc&quot;, &quot;platform&quot;: &quot;linux/amd64&quot; }  ","version":"1.1.x","tagName":"h3"},{"title":"Rancher Government Hauler","type":0,"sectionRef":"#","url":"/docs/intro","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"What's Hauler?​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/intro#whats-hauler","content":" Rancher Government Hauler simplifies the airgap experience without requiring operators to adopt a specific workflow. Hauler simplifies the airgapping process, by representing assets (images, charts, files, etc...) as content and collections to allow operators to easily fetch, store, package, and distribute these assets with declarative manifests or through the command line.  Hauler does this by storing contents and collections as OCI Artifacts and allows operators to serve contents and collections with an embedded registry and fileserver. Additionally, Hauler has the ability to store and inspect various non-image OCI Artifacts.  ","version":"1.1.x","tagName":"h2"},{"title":"Acknowledgements​","type":1,"pageTitle":"Rancher Government Hauler","url":"/docs/intro#acknowledgements","content":" Hauler wouldn't be possible without the open-source community, but there are a few projects that stand out:  oras clicosigngo-containerregistry ","version":"1.1.x","tagName":"h2"},{"title":"Hauler Store Serve Registry","type":0,"sectionRef":"#","url":"/docs/hauler-usage/store/serve/registry","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/hauler-usage/store/serve/registry#overview","content":" hauler store serve registry serves the OCI Compliant registry.  An example with available flags...  hauler store serve fileserver --port &lt;port&gt; --timeout &lt;timeout&gt; --readonly --tls-cert &lt;cert&gt; --tls-key &lt;key&gt;   ","version":"1.1.x","tagName":"h3"},{"title":"Command Overview​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/hauler-usage/store/serve/registry#command-overview","content":" Usage: hauler store serve registry [flags] Flags: -c, --config string (Optional) Location of config file (overrides all flags) --directory string (Optional) Directory to use for backend. Defaults to $PWD/registry (default &quot;registry&quot;) -h, --help help for registry -p, --port int (Optional) Specify the port to use for incoming connections (default 5000) --readonly (Optional) Run the registry as readonly (default true) --tls-cert string (Optional) Location of the TLS Certificate to use for server authenication --tls-key string (Optional) Location of the TLS Key to use for server authenication Global Flags: --cache string (deprecated flag and currently not used) -l, --log-level string (default &quot;info&quot;) -s, --store string (Optional) Specify the directory to use for the content store (default &quot;store&quot;)   ","version":"1.1.x","tagName":"h3"},{"title":"Example Commands for the Hauler Registry​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/hauler-usage/store/serve/registry#example-commands-for-the-hauler-registry","content":" # serve registry hauler store serve registry # serve registry on specific port hauler store serve registry --port &lt;port&gt; # serve registry on specific port with custom config hauler store serve registry --port &lt;port&gt; --config &lt;path-to-config&gt; # serve registry in writeable mode hauler store serve registry --readonly=false   ","version":"1.1.x","tagName":"h2"},{"title":"Example Config for the Hauler Registry​","type":1,"pageTitle":"Hauler Store Serve Registry","url":"/docs/hauler-usage/store/serve/registry#example-config-for-the-hauler-registry","content":" These are all configuration options for the registry. Some options in the list are mutually exclusive. Read the detailed reference information about each option before finalizing your configuration.  You can learn more here --&gt; https://distribution.github.io/distribution/about/configuration  version: 0.1 log: accesslog: disabled: true level: debug formatter: text fields: service: registry environment: staging hooks: - type: mail disabled: true levels: - panic options: smtp: addr: mail.example.com:25 username: mailuser password: password insecure: true from: sender@example.com to: - errors@example.com loglevel: debug # deprecated: use &quot;log&quot; storage: filesystem: rootdirectory: /var/lib/registry maxthreads: 100 azure: accountname: accountname accountkey: base64encodedaccountkey container: containername rootdirectory: /az/object/name/prefix credentials: type: client_secret clientid: client_id_string tenantid: tenant_id_string secret: secret_string copy_status_poll_max_retry: 10 copy_status_poll_delay: 100ms gcs: bucket: bucketname keyfile: /path/to/keyfile credentials: type: service_account project_id: project_id_string private_key_id: private_key_id_string private_key: private_key_string client_email: client@example.com client_id: client_id_string auth_uri: http://example.com/auth_uri token_uri: http://example.com/token_uri auth_provider_x509_cert_url: http://example.com/provider_cert_url client_x509_cert_url: http://example.com/client_cert_url rootdirectory: /gcs/object/name/prefix chunksize: 5242880 s3: accesskey: awsaccesskey secretkey: awssecretkey region: us-west-1 regionendpoint: http://myobjects.local forcepathstyle: true accelerate: false bucket: bucketname encrypt: true keyid: mykeyid secure: true v4auth: true chunksize: 5242880 multipartcopychunksize: 33554432 multipartcopymaxconcurrency: 100 multipartcopythresholdsize: 33554432 rootdirectory: /s3/object/name/prefix usedualstack: false loglevel: debug inmemory: # This driver takes no parameters tag: concurrencylimit: 8 delete: enabled: false redirect: disable: false cache: blobdescriptor: redis blobdescriptorsize: 10000 maintenance: uploadpurging: enabled: true age: 168h interval: 24h dryrun: false readonly: enabled: false auth: silly: realm: silly-realm service: silly-service token: autoredirect: true realm: token-realm service: token-service issuer: registry-token-issuer rootcertbundle: /root/certs/bundle htpasswd: realm: basic-realm path: /path/to/htpasswd middleware: registry: - name: ARegistryMiddleware options: foo: bar repository: - name: ARepositoryMiddleware options: foo: bar storage: - name: cloudfront options: baseurl: https://my.cloudfronted.domain.com/ privatekey: /path/to/pem keypairid: cloudfrontkeypairid duration: 3000s ipfilteredby: awsregion awsregion: us-east-1, use-east-2 updatefrequency: 12h iprangesurl: https://ip-ranges.amazonaws.com/ip-ranges.json storage: - name: redirect options: baseurl: https://example.com/ http: addr: localhost:5000 prefix: /my/nested/registry/ host: https://myregistryaddress.org:5000 secret: asecretforlocaldevelopment relativeurls: false draintimeout: 60s tls: certificate: /path/to/x509/public key: /path/to/x509/private clientcas: - /path/to/ca.pem - /path/to/another/ca.pem letsencrypt: cachefile: /path/to/cache-file email: emailused@letsencrypt.com hosts: [myregistryaddress.org] directoryurl: https://acme-v02.api.letsencrypt.org/directory debug: addr: localhost:5001 prometheus: enabled: true path: /metrics headers: X-Content-Type-Options: [nosniff] http2: disabled: false h2c: enabled: false notifications: events: includereferences: true endpoints: - name: alistener disabled: false url: https://my.listener.com/event headers: &lt;http.Header&gt; timeout: 1s threshold: 10 backoff: 1s ignoredmediatypes: - application/octet-stream ignore: mediatypes: - application/octet-stream actions: - pull redis: addr: localhost:6379 password: asecret db: 0 dialtimeout: 10ms readtimeout: 10ms writetimeout: 10ms pool: maxidle: 16 maxactive: 64 idletimeout: 300s tls: enabled: false health: storagedriver: enabled: true interval: 10s threshold: 3 file: - file: /path/to/checked/file interval: 10s http: - uri: http://server.to.check/must/return/200 headers: Authorization: [Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==] statuscode: 200 timeout: 3s interval: 10s threshold: 3 tcp: - addr: redis-server.domain.com:6379 timeout: 3s interval: 10s threshold: 3 proxy: remoteurl: https://registry-1.docker.io username: [username] password: [password] ttl: 168h validation: manifests: urls: allow: - ^https?://([^/]+\\.)*example\\.com/ deny: - ^https?://www\\.example\\.com/  ","version":"1.1.x","tagName":"h2"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/docs/introduction/uninstall","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#uninstallation-steps","content":" ","version":"1.1.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#linuxdarwin","content":" # uninstall hauler curl -sfL https://get.hauler.dev | HAULER_UNINSTALL=true bash   ","version":"1.1.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#homebrew","content":" # installs latest release brew uninstall hauler   ","version":"1.1.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#windows","content":" # coming soon   ","version":"1.1.x","tagName":"h3"},{"title":"Manual Uninstallation Steps​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#manual-uninstallation-steps","content":" ","version":"1.1.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#linuxdarwin-1","content":" # remove the hauler binary sudo rm -f /usr/local/bin/hauler # remove the working/installation directory rm -rf &quot;$HOME/.hauler&quot;   ","version":"1.1.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#homebrew-1","content":" # not applicable   ","version":"1.1.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Uninstall","url":"/docs/introduction/uninstall#windows-1","content":" # coming soon  ","version":"1.1.x","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/introduction/install","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Overview​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#overview","content":" Hauler is a purpose built to be a single binary with no prerequistes, depedencies, or runtime environment. It's installation is very simple and easy to follow. To view the latest release, please view our GitHub Release page.  ","version":"1.1.x","tagName":"h2"},{"title":"Supported Architectures​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#supported-architectures","content":" Base Platform\tArchitecture\tLatest ReleaseLinux\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Darwin\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases Windows\tamd64 and arm64\thttps://github.com/hauler-dev/hauler/releases  ","version":"1.1.x","tagName":"h2"},{"title":"Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#installation-steps","content":" ","version":"1.1.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#linuxdarwin","content":" # install latest release curl -sfL https://get.hauler.dev | bash # install specific release curl -sfL https://get.hauler.dev | HAULER_VERSION=1.1.0 bash # install at different directory curl -sfL https://get.hauler.dev | HAULER_INSTALL_DIR=/usr/bin bash # install with debug mode curl -sfL https://get.hauler.dev | HAULER_DEBUG=true bash   ","version":"1.1.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#homebrew","content":" # install latest release brew tap hauler-dev/homebrew-tap brew install hauler # install specific release brew tap hauler-dev/homebrew-tap brew install hauler@1.1.0   ","version":"1.1.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#windows","content":" # coming soon   ","version":"1.1.x","tagName":"h3"},{"title":"Manual Installation Steps​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#manual-installation-steps","content":" ","version":"1.1.x","tagName":"h2"},{"title":"Linux/Darwin​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#linuxdarwin-1","content":" # set the hauler version (i.e. HAULER_VERSION=1.1.0) export vHauler=HAULER_VERSION # set the specific platform (i.e. PLATFORM=linux) export platform=PLATFORM # set the specific arch (i.e. ARCH=amd64) export arch=ARCH curl -sOL https://github.com/hauler-dev/hauler/releases/download/v${vHauler}/hauler_${vHauler}_${platform}_${arch}.tar.gz tar -xf hauler_${vHauler}_${platform}_${arch}.tar.gz sudo mv hauler /usr/bin/hauler   ","version":"1.1.x","tagName":"h3"},{"title":"Homebrew​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#homebrew-1","content":" # not applicable   ","version":"1.1.x","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Installation","url":"/docs/introduction/install#windows-1","content":" # coming soon  ","version":"1.1.x","tagName":"h3"},{"title":"Known Issues and Limits","type":0,"sectionRef":"#","url":"/docs/known-limits","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Issues​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/known-limits#issues","content":" No Issues at this time.  ","version":"1.1.x","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/known-limits#limitations","content":" When using a store for hauler that has the same name of a helm chart, hauler will fail to fetch the chart. For example, if you tried to use a store name of rancher with a helm chart name rancher, the fetch will fail due to the fact that helm defaults to using an exisiting local directory, if it matches the name of the chart.https://github.com/helm/helm/blob/e81f6140ddb22bc99a08f7409522a8dbe5338ee3/pkg/action/install.go#L714-L815 When using hauler, it will default to write temporary files to /tmp. If you do not have about 3x the amount of space available in your /tmp compared to the size of the store or the haul, then hauler may fail.  ","version":"1.1.x","tagName":"h2"},{"title":"Notices​","type":1,"pageTitle":"Known Issues and Limits","url":"/docs/known-limits#notices","content":" No Notices at this time. ","version":"1.1.x","tagName":"h2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/introduction/quickstart","content":"","keywords":"hauler  dev  airgap  air-gap  docs  documentation","version":"1.1.x"},{"title":"Quick Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#quick-installation","content":" # install latest release curl -sfL https://get.hauler.dev | bash   ","version":"1.1.x","tagName":"h2"},{"title":"Getting Started with Hauler​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#getting-started-with-hauler","content":" ","version":"1.1.x","tagName":"h2"},{"title":"Add Content to the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#add-content-to-the-hauler-store","content":" Using the Command Line: # add a image... defaults to docker.io hauler store add image neuvector/scanner:latest # add a image with a specific platform and with supply chain artifacts # may not work for all users due to the specified registry hauler store add image rgcrprod.azurecr.us/longhornio/longhorn-ui:v1.7.1 --platform linux/amd64 --key carbide-key.pub # add a helm chart with a specific version hauler store add chart rancher --repo https://releases.rancher.com/server-charts/stable --version 2.9.2 # add a file and assign it a new name hauler store add file https://get.rke2.io --name install.sh   Using a Hauler Manifest: # fetch the content via a declarative manifest hauler store sync --files hauler-manifest.yaml hauler-manifest.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: hauler-content-images-example spec: images: - name: busybox - name: busybox:stable platform: linux/amd64 - name: gcr.io/distroless/base@sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: hauler-content-charts-example spec: charts: - name: rancher repoURL: https://releases.rancher.com/server-charts/stable version: 2.9.2 - name: hauler-helm repoURL: oci://ghcr.io/hauler-dev --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Files metadata: name: hauler-content-files-example spec: files: - path: https://get.rke2.io name: install.sh - path: hauler-manifest.yaml   ","version":"1.1.x","tagName":"h3"},{"title":"View the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#view-the-hauler-store","content":" # view and verify the content in the local hauler store hauler store info   ","version":"1.1.x","tagName":"h3"},{"title":"Save the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#save-the-hauler-store","content":" # save and export the content in the local hauler store hauler store save --filename haul.tar.zst         ","version":"1.1.x","tagName":"h3"},{"title":"Airgap the haul.tar.zst (aka the \"haul\")​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#airgap-the-haultarzst-aka-the-haul","content":" For this quickstart and example use of hauler, we can simulate airgapping to the disconnected environment by deleting the &quot;store&quot; directory with the following command: rm -rf store        ","version":"1.1.x","tagName":"h3"},{"title":"Load the Airgapped Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#load-the-airgapped-hauler-store","content":" # load and import the airgapped content to the new local hauler store hauler store load haul.tar.zst   ","version":"1.1.x","tagName":"h3"},{"title":"Serve the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#serve-the-hauler-store","content":" # serve the content as a readonly registry from the hauler store # defaults to &lt;FQDN or IP&gt;:5000 hauler store serve registry # serve the file content as a fileserver from the hauler store # defaults to &lt;FQDN or IP&gt;:8080 hauler store serve fileserver   ","version":"1.1.x","tagName":"h3"},{"title":"Copy the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#copy-the-hauler-store","content":" # copy the content to a registry from the hauler store # copies oci compliant artifacts hauler store copy registry://registry.example.com # copy the content to a directory from the hauler store # copies non oci compliant artifacts hauler store copy dir://hauler-files   ","version":"1.1.x","tagName":"h3"},{"title":"Extract Content from the Hauler Store​","type":1,"pageTitle":"Quickstart","url":"/docs/introduction/quickstart#extract-content-from-the-hauler-store","content":" # extracts artifacts from the hauler store to disk hauler store extract hauler/rancher:2.9.2  ","version":"1.1.x","tagName":"h3"}],"options":{"languages":["en"],"indexBaseUrl":true,"highlightResult":true,"id":"default"}}